项目：
 [{'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True}] 

新项目：
 [{'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'number'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'void'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '*='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '!'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '/'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '!='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '-='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'float'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'int'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '}'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '/='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': ';'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '%='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '&='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '+'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': ','}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '-'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '<'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '^='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'if'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'else'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '#'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '*'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '>'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '&&'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'identifier'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'while'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': ')'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '+='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '=='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': 'return'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '('}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '|='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '>='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '{'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '||'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 0, 'origin': 0, 'isTer': False, 'accept': '<='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'number'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'void'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '*='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '!'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '/'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '!='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '-='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'float'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'int'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '}'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '/='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': ';'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '%='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '&='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '+'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': ','}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '-'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '<'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '^='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'if'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'else'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '#'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '*'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '>'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '&&'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'identifier'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'while'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': ')'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '+='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '=='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': 'return'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '('}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '|='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '>='}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '{'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '||'}, {'left': 'sstart', 'right': ['start'], 'order': 1, 'point': 1, 'origin': 0, 'isTer': True, 'accept': '<='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'number'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'void'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '*='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '!'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '/'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '!='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '-='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'float'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'int'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '}'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '/='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': ';'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '%='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '&='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '+'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': ','}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '-'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '<'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '^='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'if'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'else'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '#'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '*'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '>'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '&&'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'identifier'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'while'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': ')'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '+='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '=='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': 'return'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '('}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '|='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '>='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '{'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '||'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 0, 'origin': 1, 'isTer': False, 'accept': '<='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'number'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'void'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '*='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '!'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '/'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '!='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '-='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'float'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'int'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '}'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '/='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': ';'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '%='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '&='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '+'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': ','}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '-'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '<'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '^='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'if'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'else'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '#'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '*'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '>'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '&&'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'identifier'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'while'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': ')'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '+='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '=='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': 'return'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '('}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '|='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '>='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '{'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '||'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 1, 'origin': 1, 'isTer': False, 'accept': '<='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'number'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'void'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '*='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '!'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '/'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '!='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '-='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'float'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'int'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '}'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '/='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': ';'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '%='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '&='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '+'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': ','}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '-'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '<'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '^='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'if'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'else'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '#'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '*'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '>'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '&&'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'identifier'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'while'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': ')'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '+='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '=='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': 'return'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '('}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '|='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '>='}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '{'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '||'}, {'left': 'start', 'right': ['external_declaration', 'start'], 'order': 2, 'point': 2, 'origin': 1, 'isTer': True, 'accept': '<='}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'number'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'void'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '*='}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '!'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '/'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '!='}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '-='}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'float'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'int'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '}'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '/='}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': ';'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '%='}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '&='}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '+'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': ','}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '-'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '<'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '^='}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'if'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'else'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '#'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '*'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '>'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '&&'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'identifier'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'while'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': ')'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '+='}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '=='}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': 'return'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '='}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '('}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '|='}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '>='}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '{'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '||'}, {'left': 'start', 'right': [], 'order': 3, 'point': 0, 'origin': 2, 'isTer': True, 'accept': '<='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'number'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'void'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '*='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '!'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '/'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '!='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '-='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'float'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'int'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '}'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '/='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': ';'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '%='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '&='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '+'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': ','}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '-'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '<'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '^='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'if'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'else'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '#'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '*'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '>'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '&&'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'identifier'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'while'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': ')'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '+='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '=='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': 'return'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '('}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '|='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '>='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '{'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '||'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 0, 'origin': 3, 'isTer': False, 'accept': '<='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'number'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'void'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '*='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '!'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '/'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '!='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '-='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'float'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'int'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '}'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '/='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': ';'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '%='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '&='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '+'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': ','}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '-'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '<'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '^='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'if'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'else'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '#'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '*'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '>'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '&&'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'identifier'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'while'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': ')'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '+='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '=='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': 'return'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '('}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '|='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '>='}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '{'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '||'}, {'left': 'external_declaration', 'right': ['declaration'], 'order': 101, 'point': 1, 'origin': 3, 'isTer': True, 'accept': '<='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'number'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'void'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '*='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '!'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '/'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '!='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '-='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'float'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'int'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '}'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '/='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': ';'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '%='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '&='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '+'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': ','}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '-'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '<'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '^='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'if'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'else'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '#'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '*'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '>'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '&&'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'identifier'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'while'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': ')'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '+='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '=='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': 'return'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '('}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '|='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '>='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '{'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '||'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 0, 'origin': 4, 'isTer': False, 'accept': '<='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'number'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'void'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '*='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '!'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '/'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '!='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '-='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'float'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'int'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '}'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '/='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': ';'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '%='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '&='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '+'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': ','}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '-'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '<'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '^='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'if'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'else'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '#'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '*'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '>'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '&&'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'identifier'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'while'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': ')'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '+='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '=='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': 'return'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '('}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '|='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '>='}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '{'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '||'}, {'left': 'external_declaration', 'right': ['function_definition'], 'order': 102, 'point': 1, 'origin': 4, 'isTer': True, 'accept': '<='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'number'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'void'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '*='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '!'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '/'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '!='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '-='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'float'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'int'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '}'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '/='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': ';'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '%='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '&='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '+'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': ','}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '-'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '<'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '^='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'if'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'else'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '#'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '*'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '>'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '&&'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'identifier'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'while'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': ')'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '+='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '=='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': 'return'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '('}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '|='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '>='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '{'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '||'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 0, 'origin': 5, 'isTer': False, 'accept': '<='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': 'number'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': 'void'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '*='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '!'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '/'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '!='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '-='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': 'float'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': 'int'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '}'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '/='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': ';'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '%='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '&='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '+'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': ','}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '-'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '<'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '^='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': 'if'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': 'else'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '#'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '*'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '>'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '&&'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': 'identifier'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': 'while'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': ')'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '+='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '=='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': 'return'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '('}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '|='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '>='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '{'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '||'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 1, 'origin': 5, 'isTer': False, 'accept': '<='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': 'number'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': 'void'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '*='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '!'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '/'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '!='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '-='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': 'float'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': 'int'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '}'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '/='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': ';'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '%='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '&='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '+'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': ','}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '-'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '<'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '^='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': 'if'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': 'else'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '#'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '*'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '>'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '&&'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': 'identifier'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': 'while'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': ')'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '+='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '=='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': 'return'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '('}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '|='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '>='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '{'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '||'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 2, 'origin': 5, 'isTer': False, 'accept': '<='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': 'number'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': 'void'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '*='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '!'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '/'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '!='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '-='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': 'float'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': 'int'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '}'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '/='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': ';'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '%='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '&='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '+'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': ','}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '-'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '<'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '^='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': 'if'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': 'else'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '#'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '*'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '>'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '&&'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': 'identifier'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': 'while'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': ')'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '+='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '=='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': 'return'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '('}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '|='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '>='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '{'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '||'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 3, 'origin': 5, 'isTer': False, 'accept': '<='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': 'number'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': 'void'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '*='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '!'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '/'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '!='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '-='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': 'float'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': 'int'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '}'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '/='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': ';'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '%='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '&='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '+'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': ','}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '-'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '<'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '^='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': 'if'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': 'else'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '#'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '*'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '>'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '&&'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': 'identifier'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': 'while'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': ')'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '+='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '=='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': 'return'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '('}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '|='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '>='}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '{'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '||'}, {'left': 'declaration', 'right': ['type_specifier', 'declaration_parameter', 'declaration_parameter_suffix', ';'], 'order': 111, 'point': 4, 'origin': 5, 'isTer': True, 'accept': '<='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'number'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'void'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '*='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '!'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '/'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '!='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '-='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'float'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'int'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '}'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '/='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': ';'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '%='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '&='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '+'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': ','}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '-'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '<'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '^='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'if'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'else'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '#'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '*'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '>'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '&&'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'identifier'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'while'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': ')'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '+='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '=='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': 'return'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '('}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '|='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '>='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '{'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '||'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 0, 'origin': 6, 'isTer': False, 'accept': '<='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': 'number'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': 'void'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '*='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '!'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '/'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '!='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '-='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': 'float'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': 'int'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '}'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '/='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': ';'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '%='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '&='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '+'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': ','}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '-'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '<'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '^='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': 'if'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': 'else'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '#'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '*'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '>'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '&&'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': 'identifier'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': 'while'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': ')'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '+='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '=='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': 'return'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '('}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '|='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '>='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '{'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '||'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 1, 'origin': 6, 'isTer': False, 'accept': '<='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': 'number'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': 'void'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '*='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '!'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '/'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '!='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '-='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': 'float'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': 'int'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '}'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '/='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': ';'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '%='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '&='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '+'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': ','}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '-'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '<'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '^='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': 'if'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': 'else'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '#'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '*'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '>'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '&&'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': 'identifier'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': 'while'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': ')'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '+='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '=='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': 'return'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '('}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '|='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '>='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '{'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '||'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 2, 'origin': 6, 'isTer': False, 'accept': '<='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': 'number'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': 'void'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '*='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '!'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '/'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '!='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '-='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': 'float'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': 'int'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '}'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '/='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': ';'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '%='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '&='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '+'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': ','}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '-'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '<'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '^='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': 'if'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': 'else'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '#'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '*'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '>'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '&&'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': 'identifier'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': 'while'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': ')'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '+='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '=='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': 'return'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '('}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '|='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '>='}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '{'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '||'}, {'left': 'declaration_parameter', 'right': ['identifier', 'M_declaration_parameter', 'declaration_parameter_assign'], 'order': 112, 'point': 3, 'origin': 6, 'isTer': True, 'accept': '<='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'number'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'void'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '*='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '!'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '/'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '!='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '-='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'float'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'int'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '}'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '/='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': ';'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '%='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '&='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '+'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': ','}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '-'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '<'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '^='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'if'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'else'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '#'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '*'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '>'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '&&'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'identifier'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'while'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': ')'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '+='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '=='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': 'return'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '('}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '|='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '>='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '{'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '||'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 0, 'origin': 7, 'isTer': False, 'accept': '<='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': 'number'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': 'void'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '*='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '!'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '/'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '!='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '-='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': 'float'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': 'int'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '}'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '/='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': ';'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '%='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '&='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '+'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': ','}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '-'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '<'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '^='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': 'if'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': 'else'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '#'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '*'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '>'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '&&'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': 'identifier'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': 'while'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': ')'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '+='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '=='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': 'return'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '('}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '|='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '>='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '{'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '||'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 1, 'origin': 7, 'isTer': False, 'accept': '<='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': 'number'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': 'void'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '*='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '!'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '/'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '!='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '-='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': 'float'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': 'int'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '}'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '/='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': ';'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '%='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '&='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '+'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': ','}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '-'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '<'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '^='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': 'if'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': 'else'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '#'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '*'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '>'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '&&'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': 'identifier'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': 'while'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': ')'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '+='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '=='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': 'return'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '('}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '|='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '>='}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '{'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '||'}, {'left': 'declaration_parameter_assign', 'right': ['=', 'expression'], 'order': 113, 'point': 2, 'origin': 7, 'isTer': True, 'accept': '<='}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': 'number'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': 'void'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '*='}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '!'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '/'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '!='}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '-='}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': 'float'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': 'int'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '}'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '/='}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': ';'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '%='}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '&='}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '+'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': ','}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '-'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '<'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '^='}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': 'if'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': 'else'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '#'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '*'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '>'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '&&'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': 'identifier'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': 'while'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': ')'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '+='}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '=='}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': 'return'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '='}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '('}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '|='}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '>='}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '{'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '||'}, {'left': 'declaration_parameter_assign', 'right': [], 'order': 114, 'point': 0, 'origin': 8, 'isTer': True, 'accept': '<='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'number'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'void'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '*='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '!'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '/'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '!='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '-='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'float'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'int'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '}'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '/='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': ';'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '%='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '&='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '+'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': ','}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '-'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '<'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '^='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'if'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'else'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '#'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '*'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '>'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '&&'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'identifier'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'while'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': ')'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '+='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '=='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': 'return'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '('}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '|='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '>='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '{'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '||'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 0, 'origin': 9, 'isTer': False, 'accept': '<='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': 'number'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': 'void'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '*='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '!'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '/'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '!='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '-='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': 'float'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': 'int'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '}'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '/='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': ';'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '%='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '&='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '+'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': ','}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '-'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '<'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '^='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': 'if'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': 'else'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '#'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '*'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '>'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '&&'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': 'identifier'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': 'while'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': ')'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '+='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '=='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': 'return'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '('}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '|='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '>='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '{'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '||'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 1, 'origin': 9, 'isTer': False, 'accept': '<='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': 'number'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': 'void'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '*='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '!'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '/'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '!='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '-='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': 'float'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': 'int'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '}'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '/='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': ';'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '%='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '&='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '+'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': ','}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '-'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '<'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '^='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': 'if'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': 'else'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '#'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '*'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '>'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '&&'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': 'identifier'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': 'while'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': ')'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '+='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '=='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': 'return'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '('}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '|='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '>='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '{'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '||'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 2, 'origin': 9, 'isTer': False, 'accept': '<='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': 'number'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': 'void'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '*='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '!'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '/'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '!='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '-='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': 'float'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': 'int'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '}'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '/='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': ';'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '%='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '&='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '+'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': ','}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '-'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '<'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '^='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': 'if'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': 'else'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '#'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '*'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '>'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '&&'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': 'identifier'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': 'while'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': ')'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '+='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '=='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': 'return'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '('}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '|='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '>='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '{'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '||'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 3, 'origin': 9, 'isTer': False, 'accept': '<='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': 'number'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': 'void'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '*='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '!'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '/'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '!='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '-='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': 'float'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': 'int'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '}'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '/='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': ';'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '%='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '&='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '+'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': ','}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '-'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '<'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '^='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': 'if'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': 'else'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '#'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '*'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '>'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '&&'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': 'identifier'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': 'while'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': ')'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '+='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '=='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': 'return'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '('}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '|='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '>='}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '{'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '||'}, {'left': 'declaration_parameter_suffix', 'right': [',', 'M_declaration_parameter_suffix', 'declaration_parameter', 'declaration_parameter_suffix'], 'order': 115, 'point': 4, 'origin': 9, 'isTer': True, 'accept': '<='}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': 'number'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': 'void'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '*='}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '!'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '/'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '!='}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '-='}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': 'float'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': 'int'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '}'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '/='}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': ';'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '%='}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '&='}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '+'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': ','}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '-'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '<'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '^='}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': 'if'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': 'else'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '#'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '*'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '>'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '&&'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': 'identifier'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': 'while'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': ')'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '+='}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '=='}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': 'return'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '='}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '('}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '|='}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '>='}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '{'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '||'}, {'left': 'declaration_parameter_suffix', 'right': [], 'order': 116, 'point': 0, 'origin': 10, 'isTer': True, 'accept': '<='}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': 'number'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': 'void'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '*='}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '!'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '/'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '!='}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '-='}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': 'float'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': 'int'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '}'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '/='}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': ';'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '%='}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '&='}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '+'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': ','}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '-'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '<'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '^='}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': 'if'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': 'else'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '#'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '*'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '>'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '&&'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': 'identifier'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': 'while'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': ')'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '+='}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '=='}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': 'return'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '='}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '('}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '|='}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '>='}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '{'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '||'}, {'left': 'M_declaration_parameter', 'right': [], 'order': 117, 'point': 0, 'origin': 11, 'isTer': True, 'accept': '<='}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': 'number'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': 'void'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '*='}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '!'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '/'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '!='}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '-='}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': 'float'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': 'int'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '}'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '/='}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': ';'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '%='}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '&='}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '+'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': ','}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '-'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '<'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '^='}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': 'if'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': 'else'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '#'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '*'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '>'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '&&'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': 'identifier'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': 'while'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': ')'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '+='}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '=='}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': 'return'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '='}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '('}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '|='}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '>='}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '{'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '||'}, {'left': 'M_declaration_parameter_suffix', 'right': [], 'order': 118, 'point': 0, 'origin': 12, 'isTer': True, 'accept': '<='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': 'number'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': 'void'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '*='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '!'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '/'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '!='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '-='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': 'float'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': 'int'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '}'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '/='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': ';'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '%='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '&='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '+'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': ','}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '-'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '<'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '^='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': 'if'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': 'else'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '#'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '*'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '>'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '&&'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': 'identifier'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': 'while'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': ')'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '+='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '=='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': 'return'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '('}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '|='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '>='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '{'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '||'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 0, 'origin': 13, 'isTer': False, 'accept': '<='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': 'number'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': 'void'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '*='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '!'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '/'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '!='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '-='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': 'float'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': 'int'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '}'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '/='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': ';'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '%='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '&='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '+'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': ','}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '-'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '<'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '^='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': 'if'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': 'else'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '#'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '*'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '>'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '&&'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': 'identifier'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': 'while'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': ')'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '+='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '=='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': 'return'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '('}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '|='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '>='}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '{'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '||'}, {'left': 'primary_expression', 'right': ['identifier'], 'order': 121, 'point': 1, 'origin': 13, 'isTer': True, 'accept': '<='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'number'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'void'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '*='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '!'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '/'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '!='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '-='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'float'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'int'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '}'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '/='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': ';'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '%='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '&='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '+'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': ','}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '-'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '<'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '^='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'if'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'else'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '#'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '*'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '>'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '&&'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'identifier'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'while'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': ')'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '+='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '=='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': 'return'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '('}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '|='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '>='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '{'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '||'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 0, 'origin': 14, 'isTer': False, 'accept': '<='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': 'number'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': 'void'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '*='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '!'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '/'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '!='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '-='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': 'float'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': 'int'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '}'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '/='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': ';'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '%='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '&='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '+'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': ','}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '-'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '<'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '^='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': 'if'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': 'else'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '#'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '*'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '>'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '&&'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': 'identifier'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': 'while'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': ')'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '+='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '=='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': 'return'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '('}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '|='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '>='}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '{'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '||'}, {'left': 'primary_expression', 'right': ['number'], 'order': 122, 'point': 1, 'origin': 14, 'isTer': True, 'accept': '<='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': 'number'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': 'void'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '*='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '!'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '/'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '!='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '-='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': 'float'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': 'int'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '}'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '/='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': ';'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '%='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '&='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '+'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': ','}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '-'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '<'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '^='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': 'if'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': 'else'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '#'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '*'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '>'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '&&'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': 'identifier'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': 'while'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': ')'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '+='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '=='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': 'return'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '('}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '|='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '>='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '{'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '||'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 0, 'origin': 15, 'isTer': False, 'accept': '<='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': 'number'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': 'void'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '*='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '!'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '/'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '!='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '-='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': 'float'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': 'int'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '}'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '/='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': ';'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '%='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '&='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '+'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': ','}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '-'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '<'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '^='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': 'if'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': 'else'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '#'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '*'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '>'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '&&'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': 'identifier'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': 'while'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': ')'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '+='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '=='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': 'return'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '('}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '|='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '>='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '{'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '||'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 1, 'origin': 15, 'isTer': False, 'accept': '<='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': 'number'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': 'void'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '*='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '!'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '/'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '!='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '-='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': 'float'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': 'int'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '}'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '/='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': ';'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '%='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '&='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '+'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': ','}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '-'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '<'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '^='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': 'if'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': 'else'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '#'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '*'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '>'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '&&'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': 'identifier'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': 'while'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': ')'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '+='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '=='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': 'return'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '('}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '|='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '>='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '{'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '||'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 2, 'origin': 15, 'isTer': False, 'accept': '<='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': 'number'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': 'void'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '*='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '!'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '/'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '!='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '-='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': 'float'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': 'int'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '}'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '/='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': ';'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '%='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '&='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '+'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': ','}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '-'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '<'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '^='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': 'if'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': 'else'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '#'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '*'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '>'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '&&'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': 'identifier'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': 'while'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': ')'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '+='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '=='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': 'return'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '('}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '|='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '>='}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '{'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '||'}, {'left': 'primary_expression', 'right': ['(', 'expression', ')'], 'order': 123, 'point': 3, 'origin': 15, 'isTer': True, 'accept': '<='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'number'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'void'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '*='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '!'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '/'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '!='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '-='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'float'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'int'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '}'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '/='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': ';'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '%='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '&='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '+'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': ','}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '-'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '<'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '^='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'if'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'else'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '#'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '*'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '>'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '&&'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'identifier'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'while'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': ')'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '+='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '=='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': 'return'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '('}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '|='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '>='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '{'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '||'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 0, 'origin': 16, 'isTer': False, 'accept': '<='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'number'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'void'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '*='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '!'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '/'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '!='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '-='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'float'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'int'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '}'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '/='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': ';'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '%='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '&='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '+'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': ','}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '-'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '<'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '^='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'if'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'else'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '#'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '*'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '>'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '&&'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'identifier'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'while'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': ')'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '+='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '=='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': 'return'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '('}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '|='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '>='}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '{'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '||'}, {'left': 'expression', 'right': ['function_expression'], 'order': 131, 'point': 1, 'origin': 16, 'isTer': True, 'accept': '<='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'number'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'void'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '*='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '!'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '/'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '!='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '-='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'float'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'int'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '}'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '/='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': ';'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '%='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '&='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '+'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': ','}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '-'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '<'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '^='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'if'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'else'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '#'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '*'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '>'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '&&'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'identifier'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'while'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': ')'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '+='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '=='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': 'return'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '('}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '|='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '>='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '{'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '||'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 0, 'origin': 17, 'isTer': False, 'accept': '<='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'number'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'void'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '*='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '!'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '/'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '!='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '-='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'float'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'int'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '}'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '/='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': ';'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '%='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '&='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '+'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': ','}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '-'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '<'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '^='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'if'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'else'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '#'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '*'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '>'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '&&'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'identifier'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'while'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': ')'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '+='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '=='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': 'return'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '('}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '|='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '>='}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '{'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '||'}, {'left': 'expression', 'right': ['constant_expression'], 'order': 132, 'point': 1, 'origin': 17, 'isTer': True, 'accept': '<='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'number'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'void'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '*='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '!'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '/'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '!='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '-='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'float'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'int'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '}'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '/='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': ';'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '%='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '&='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '+'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': ','}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '-'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '<'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '^='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'if'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'else'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '#'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '*'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '>'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '&&'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'while'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': ')'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '+='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '=='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': 'return'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '('}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '|='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '>='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '{'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '||'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 0, 'origin': 18, 'isTer': False, 'accept': '<='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'number'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'void'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '*='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '!'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '/'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '!='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '-='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'float'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'int'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '}'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '/='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': ';'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '%='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '&='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '+'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': ','}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '-'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '<'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '^='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'if'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'else'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '#'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '*'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '>'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '&&'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'while'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': ')'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '+='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '=='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': 'return'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '('}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '|='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '>='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '{'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '||'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 1, 'origin': 18, 'isTer': False, 'accept': '<='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'number'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'void'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '*='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '!'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '/'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '!='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '-='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'float'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'int'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '}'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '/='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': ';'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '%='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '&='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '+'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': ','}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '-'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '<'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '^='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'if'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'else'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '#'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '*'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '>'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '&&'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'while'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': ')'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '+='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '=='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': 'return'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '('}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '|='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '>='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '{'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '||'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 2, 'origin': 18, 'isTer': False, 'accept': '<='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': 'number'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': 'void'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '*='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '!'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '/'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '!='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '-='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': 'float'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': 'int'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '}'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '/='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': ';'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '%='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '&='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '+'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': ','}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '-'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '<'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '^='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': 'if'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': 'else'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '#'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '*'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '>'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '&&'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': 'while'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': ')'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '+='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '=='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': 'return'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '('}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '|='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '>='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '{'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '||'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 3, 'origin': 18, 'isTer': False, 'accept': '<='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': 'number'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': 'void'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '*='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '!'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '/'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '!='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '-='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': 'float'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': 'int'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '}'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '/='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': ';'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '%='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '&='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '+'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': ','}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '-'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '<'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '^='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': 'if'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': 'else'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '#'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '*'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '>'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '&&'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': 'identifier'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': 'while'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': ')'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '+='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '=='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': 'return'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '('}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '|='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '>='}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '{'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '||'}, {'left': 'function_expression', 'right': ['identifier', '(', 'expression_list', ')'], 'order': 141, 'point': 4, 'origin': 18, 'isTer': True, 'accept': '<='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'number'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'void'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '*='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '!'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '/'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '!='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '-='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'float'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'int'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '}'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '/='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': ';'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '%='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '&='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '+'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': ','}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '-'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '<'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '^='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'if'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'else'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '#'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '*'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '>'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '&&'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'identifier'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'while'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': ')'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '+='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '=='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': 'return'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '('}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '|='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '>='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '{'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '||'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 0, 'origin': 19, 'isTer': False, 'accept': '<='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': 'number'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': 'void'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '*='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '!'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '/'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '!='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '-='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': 'float'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': 'int'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '}'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '/='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': ';'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '%='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '&='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '+'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': ','}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '-'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '<'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '^='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': 'if'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': 'else'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '#'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '*'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '>'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '&&'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': 'identifier'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': 'while'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': ')'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '+='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '=='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': 'return'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '('}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '|='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '>='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '{'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '||'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 1, 'origin': 19, 'isTer': False, 'accept': '<='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': 'number'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': 'void'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '*='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '!'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '/'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '!='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '-='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': 'float'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': 'int'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '}'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '/='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': ';'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '%='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '&='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '+'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': ','}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '-'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '<'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '^='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': 'if'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': 'else'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '#'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '*'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '>'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '&&'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': 'identifier'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': 'while'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': ')'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '+='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '=='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': 'return'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '('}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '|='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '>='}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '{'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '||'}, {'left': 'expression_list', 'right': ['expression', 'expression_list_suffix'], 'order': 151, 'point': 2, 'origin': 19, 'isTer': True, 'accept': '<='}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': 'number'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': 'void'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '*='}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '!'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '/'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '!='}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '-='}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': 'float'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': 'int'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '}'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '/='}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': ';'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '%='}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '&='}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '+'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': ','}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '-'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '<'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '^='}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': 'if'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': 'else'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '#'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '*'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '>'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '&&'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': 'identifier'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': 'while'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': ')'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '+='}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '=='}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': 'return'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '='}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '('}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '|='}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '>='}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '{'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '||'}, {'left': 'expression_list', 'right': [], 'order': 152, 'point': 0, 'origin': 20, 'isTer': True, 'accept': '<='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'number'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'void'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '*='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '!'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '/'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '!='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '-='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'float'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'int'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '}'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '/='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': ';'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '%='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '&='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '+'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': ','}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '-'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '<'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '^='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'if'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'else'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '#'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '*'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '>'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '&&'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'identifier'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'while'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': ')'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '+='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '=='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': 'return'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '('}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '|='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '>='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '{'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '||'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 0, 'origin': 21, 'isTer': False, 'accept': '<='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': 'number'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': 'void'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '*='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '!'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '/'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '!='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '-='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': 'float'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': 'int'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '}'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '/='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': ';'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '%='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '&='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '+'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': ','}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '-'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '<'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '^='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': 'if'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': 'else'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '#'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '*'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '>'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '&&'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': 'identifier'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': 'while'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': ')'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '+='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '=='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': 'return'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '('}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '|='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '>='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '{'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '||'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 1, 'origin': 21, 'isTer': False, 'accept': '<='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': 'number'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': 'void'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '*='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '!'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '/'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '!='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '-='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': 'float'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': 'int'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '}'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '/='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': ';'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '%='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '&='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '+'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': ','}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '-'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '<'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '^='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': 'if'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': 'else'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '#'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '*'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '>'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '&&'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': 'identifier'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': 'while'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': ')'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '+='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '=='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': 'return'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '('}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '|='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '>='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '{'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '||'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 2, 'origin': 21, 'isTer': False, 'accept': '<='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': 'number'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': 'void'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '*='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '!'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '/'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '!='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '-='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': 'float'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': 'int'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '}'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '/='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': ';'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '%='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '&='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '+'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': ','}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '-'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '<'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '^='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': 'if'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': 'else'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '#'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '*'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '>'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '&&'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': 'identifier'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': 'while'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': ')'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '+='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '=='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': 'return'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '('}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '|='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '>='}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '{'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '||'}, {'left': 'expression_list_suffix', 'right': [',', 'expression', 'expression_list_suffix'], 'order': 153, 'point': 3, 'origin': 21, 'isTer': True, 'accept': '<='}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': 'number'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': 'void'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '*='}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '!'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '/'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '!='}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '-='}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': 'float'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': 'int'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '}'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '/='}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': ';'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '%='}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '&='}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '+'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': ','}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '-'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '<'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '^='}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': 'if'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': 'else'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '#'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '*'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '>'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '&&'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': 'identifier'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': 'while'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': ')'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '+='}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '=='}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': 'return'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '='}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '('}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '|='}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '>='}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '{'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '||'}, {'left': 'expression_list_suffix', 'right': [], 'order': 154, 'point': 0, 'origin': 22, 'isTer': True, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': ','}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '('}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 0, 'origin': 23, 'isTer': False, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': ','}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '('}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['='], 'order': 201, 'point': 1, 'origin': 23, 'isTer': True, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': ','}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '('}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 0, 'origin': 24, 'isTer': False, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': ','}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '('}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['+='], 'order': 202, 'point': 1, 'origin': 24, 'isTer': True, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': ','}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '('}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 0, 'origin': 25, 'isTer': False, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': ','}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '('}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['-='], 'order': 203, 'point': 1, 'origin': 25, 'isTer': True, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': ','}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '('}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 0, 'origin': 26, 'isTer': False, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': ','}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '('}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['*='], 'order': 204, 'point': 1, 'origin': 26, 'isTer': True, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': ','}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '('}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 0, 'origin': 27, 'isTer': False, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': ','}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '('}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['/='], 'order': 205, 'point': 1, 'origin': 27, 'isTer': True, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': ','}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '('}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 0, 'origin': 28, 'isTer': False, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': ','}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '('}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['%='], 'order': 206, 'point': 1, 'origin': 28, 'isTer': True, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': ','}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '('}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 0, 'origin': 29, 'isTer': False, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': ','}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '('}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['^='], 'order': 207, 'point': 1, 'origin': 29, 'isTer': True, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': ','}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '('}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 0, 'origin': 30, 'isTer': False, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': ','}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '('}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['&='], 'order': 208, 'point': 1, 'origin': 30, 'isTer': True, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': ','}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '('}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 0, 'origin': 31, 'isTer': False, 'accept': '<='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '*='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '!'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '/'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '!='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '-='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '}'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '/='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': ';'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '%='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '&='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '+'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': ','}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '-'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '<'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '^='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '#'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '*'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '>'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': ')'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '+='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '=='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '('}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '|='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '>='}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '{'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '||'}, {'left': 'assignment_operator', 'right': ['|='], 'order': 209, 'point': 1, 'origin': 31, 'isTer': True, 'accept': '<='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'number'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'void'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '*='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '!'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '/'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '!='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '-='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'float'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'int'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '}'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '/='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': ';'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '%='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '&='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '+'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': ','}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '-'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '<'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '^='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'if'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'else'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '#'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '*'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '>'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '&&'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'identifier'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'while'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': ')'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '+='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '=='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': 'return'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '('}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '|='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '>='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '{'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '||'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 0, 'origin': 32, 'isTer': False, 'accept': '<='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'number'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'void'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '*='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '!'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '/'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '!='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '-='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'float'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'int'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '}'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '/='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': ';'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '%='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '&='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '+'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': ','}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '-'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '<'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '^='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'if'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'else'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '#'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '*'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '>'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '&&'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'identifier'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'while'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': ')'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '+='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '=='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': 'return'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '('}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '|='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '>='}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '{'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '||'}, {'left': 'type_specifier', 'right': ['int'], 'order': 301, 'point': 1, 'origin': 32, 'isTer': True, 'accept': '<='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'number'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'void'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '*='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '!'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '/'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '!='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '-='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'float'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'int'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '}'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '/='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': ';'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '%='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '&='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '+'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': ','}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '-'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '<'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '^='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'if'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'else'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '#'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '*'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '>'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '&&'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'identifier'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'while'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': ')'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '+='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '=='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': 'return'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '('}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '|='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '>='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '{'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '||'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 0, 'origin': 33, 'isTer': False, 'accept': '<='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'number'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'void'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '*='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '!'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '/'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '!='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '-='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'float'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'int'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '}'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '/='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': ';'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '%='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '&='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '+'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': ','}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '-'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '<'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '^='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'if'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'else'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '#'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '*'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '>'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '&&'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'identifier'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'while'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': ')'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '+='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '=='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': 'return'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '('}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '|='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '>='}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '{'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '||'}, {'left': 'type_specifier', 'right': ['float'], 'order': 303, 'point': 1, 'origin': 33, 'isTer': True, 'accept': '<='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'number'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'void'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '*='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '!'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '/'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '!='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '-='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'float'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'int'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '}'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '/='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': ';'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '%='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '&='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '+'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': ','}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '-'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '<'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '^='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'if'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'else'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '#'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '*'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '>'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '&&'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'identifier'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'while'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': ')'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '+='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '=='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': 'return'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '('}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '|='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '>='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '{'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '||'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 0, 'origin': 34, 'isTer': False, 'accept': '<='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'number'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'void'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '*='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '!'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '/'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '!='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '-='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'float'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'int'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '}'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '/='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': ';'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '%='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '&='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '+'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': ','}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '-'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '<'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '^='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'if'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'else'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '#'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '*'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '>'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '&&'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'identifier'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'while'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': ')'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '+='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '=='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': 'return'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '('}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '|='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '>='}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '{'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '||'}, {'left': 'type_specifier', 'right': ['void'], 'order': 304, 'point': 1, 'origin': 34, 'isTer': True, 'accept': '<='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'number'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'void'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '*='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '!'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '/'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '!='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '-='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'float'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'int'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '}'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '/='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': ';'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '%='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '&='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '+'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': ','}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '-'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '<'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '^='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'if'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'else'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '#'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '*'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '>'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '&&'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'identifier'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'while'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': ')'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '+='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '=='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': 'return'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '('}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '|='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '>='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '{'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '||'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 0, 'origin': 35, 'isTer': False, 'accept': '<='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'number'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'void'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '*='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '!'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '/'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '!='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '-='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'float'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'int'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '}'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '/='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': ';'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '%='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '&='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '+'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': ','}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '-'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '<'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '^='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'if'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'else'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '#'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '*'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '>'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '&&'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'identifier'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'while'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': ')'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '+='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '=='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': 'return'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '('}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '|='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '>='}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '{'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '||'}, {'left': 'constant_expression', 'right': ['or_bool_expression'], 'order': 401, 'point': 1, 'origin': 35, 'isTer': True, 'accept': '<='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'number'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'void'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '*='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '!'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '/'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '!='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '-='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'float'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'int'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '}'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '/='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': ';'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '%='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '&='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '+'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': ','}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '-'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '<'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '^='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'if'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'else'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '#'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '*'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '>'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '&&'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'identifier'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'while'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': ')'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '+='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '=='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': 'return'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '('}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '|='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '>='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '{'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '||'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 0, 'origin': 36, 'isTer': False, 'accept': '<='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': 'number'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': 'void'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '*='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '!'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '/'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '!='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '-='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': 'float'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': 'int'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '}'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '/='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': ';'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '%='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '&='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '+'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': ','}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '-'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '<'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '^='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': 'if'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': 'else'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '#'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '*'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '>'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '&&'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': 'identifier'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': 'while'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': ')'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '+='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '=='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': 'return'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '('}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '|='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '>='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '{'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '||'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 1, 'origin': 36, 'isTer': False, 'accept': '<='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': 'number'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': 'void'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '*='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '!'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '/'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '!='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '-='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': 'float'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': 'int'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '}'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '/='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': ';'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '%='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '&='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '+'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': ','}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '-'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '<'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '^='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': 'if'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': 'else'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '#'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '*'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '>'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '&&'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': 'identifier'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': 'while'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': ')'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '+='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '=='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': 'return'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '('}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '|='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '>='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '{'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '||'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 2, 'origin': 36, 'isTer': False, 'accept': '<='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': 'number'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': 'void'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '*='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '!'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '/'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '!='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '-='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': 'float'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': 'int'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '}'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '/='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': ';'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '%='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '&='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '+'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': ','}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '-'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '<'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '^='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': 'if'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': 'else'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '#'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '*'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '>'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '&&'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': 'identifier'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': 'while'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': ')'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '+='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '=='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': 'return'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '('}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '|='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '>='}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '{'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '||'}, {'left': 'or_bool_expression', 'right': ['or_bool_expression', 'or_operator', 'and_bool_expression'], 'order': 402, 'point': 3, 'origin': 36, 'isTer': True, 'accept': '<='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'number'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'void'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '*='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '!'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '/'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '!='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '-='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'float'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'int'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '}'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '/='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': ';'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '%='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '&='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '+'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': ','}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '-'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '<'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '^='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'if'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'else'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '#'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '*'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '>'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '&&'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'identifier'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'while'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': ')'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '+='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '=='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': 'return'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '('}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '|='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '>='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '{'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '||'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 0, 'origin': 37, 'isTer': False, 'accept': '<='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'number'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'void'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '*='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '!'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '/'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '!='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '-='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'float'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'int'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '}'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '/='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': ';'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '%='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '&='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '+'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': ','}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '-'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '<'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '^='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'if'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'else'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '#'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '*'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '>'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '&&'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'identifier'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'while'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': ')'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '+='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '=='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': 'return'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '('}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '|='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '>='}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '{'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '||'}, {'left': 'or_bool_expression', 'right': ['and_bool_expression'], 'order': 403, 'point': 1, 'origin': 37, 'isTer': True, 'accept': '<='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'number'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'void'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '*='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '!'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '/'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '!='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '-='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'float'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'int'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '}'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '/='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': ';'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '%='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '&='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '+'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': ','}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '-'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '<'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '^='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'if'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'else'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '#'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '*'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '>'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '&&'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'identifier'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'while'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': ')'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '+='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '=='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': 'return'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '('}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '|='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '>='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '{'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '||'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 0, 'origin': 38, 'isTer': False, 'accept': '<='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': 'number'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': 'void'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '*='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '!'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '/'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '!='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '-='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': 'float'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': 'int'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '}'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '/='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': ';'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '%='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '&='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '+'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': ','}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '-'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '<'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '^='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': 'if'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': 'else'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '#'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '*'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '>'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '&&'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': 'identifier'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': 'while'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': ')'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '+='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '=='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': 'return'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '('}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '|='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '>='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '{'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '||'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 1, 'origin': 38, 'isTer': False, 'accept': '<='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': 'number'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': 'void'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '*='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '!'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '/'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '!='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '-='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': 'float'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': 'int'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '}'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '/='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': ';'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '%='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '&='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '+'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': ','}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '-'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '<'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '^='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': 'if'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': 'else'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '#'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '*'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '>'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '&&'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': 'identifier'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': 'while'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': ')'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '+='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '=='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': 'return'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '('}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '|='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '>='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '{'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '||'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 2, 'origin': 38, 'isTer': False, 'accept': '<='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': 'number'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': 'void'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '*='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '!'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '/'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '!='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '-='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': 'float'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': 'int'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '}'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '/='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': ';'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '%='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '&='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '+'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': ','}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '-'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '<'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '^='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': 'if'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': 'else'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '#'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '*'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '>'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '&&'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': 'identifier'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': 'while'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': ')'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '+='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '=='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': 'return'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '('}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '|='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '>='}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '{'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '||'}, {'left': 'and_bool_expression', 'right': ['and_bool_expression', 'and_operator', 'single_bool_expression'], 'order': 404, 'point': 3, 'origin': 38, 'isTer': True, 'accept': '<='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'number'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'void'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '*='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '!'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '/'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '!='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '-='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'float'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'int'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '}'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '/='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': ';'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '%='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '&='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '+'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': ','}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '-'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '<'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '^='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'if'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'else'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '#'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '*'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '>'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '&&'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'identifier'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'while'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': ')'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '+='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '=='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': 'return'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '('}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '|='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '>='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '{'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '||'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 0, 'origin': 39, 'isTer': False, 'accept': '<='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'number'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'void'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '*='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '!'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '/'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '!='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '-='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'float'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'int'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '}'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '/='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': ';'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '%='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '&='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '+'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': ','}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '-'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '<'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '^='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'if'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'else'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '#'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '*'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '>'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '&&'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'identifier'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'while'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': ')'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '+='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '=='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': 'return'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '('}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '|='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '>='}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '{'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '||'}, {'left': 'and_bool_expression', 'right': ['single_bool_expression'], 'order': 405, 'point': 1, 'origin': 39, 'isTer': True, 'accept': '<='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'number'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'void'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '*='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '!'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '/'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '!='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '-='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'float'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'int'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '}'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '/='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': ';'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '%='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '&='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '+'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': ','}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '-'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '<'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '^='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'if'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'else'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '#'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '*'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '>'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '&&'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'identifier'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'while'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': ')'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '+='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '=='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': 'return'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '('}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '|='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '>='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '{'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '||'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 0, 'origin': 40, 'isTer': False, 'accept': '<='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': 'number'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': 'void'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '*='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '!'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '/'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '!='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '-='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': 'float'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': 'int'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '}'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '/='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': ';'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '%='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '&='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '+'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': ','}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '-'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '<'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '^='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': 'if'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': 'else'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '#'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '*'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '>'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '&&'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': 'identifier'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': 'while'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': ')'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '+='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '=='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': 'return'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '('}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '|='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '>='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '{'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '||'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 1, 'origin': 40, 'isTer': False, 'accept': '<='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': 'number'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': 'void'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '*='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '!'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '/'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '!='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '-='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': 'float'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': 'int'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '}'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '/='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': ';'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '%='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '&='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '+'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': ','}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '-'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '<'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '^='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': 'if'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': 'else'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '#'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '*'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '>'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '&&'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': 'identifier'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': 'while'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': ')'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '+='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '=='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': 'return'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '('}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '|='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '>='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '{'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '||'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 2, 'origin': 40, 'isTer': False, 'accept': '<='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': 'number'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': 'void'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '*='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '!'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '/'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '!='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '-='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': 'float'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': 'int'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '}'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '/='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': ';'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '%='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '&='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '+'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': ','}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '-'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '<'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '^='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': 'if'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': 'else'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '#'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '*'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '>'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '&&'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': 'identifier'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': 'while'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': ')'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '+='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '=='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': 'return'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '('}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '|='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '>='}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '{'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '||'}, {'left': 'single_bool_expression', 'right': ['single_bool_expression', 'bool_operator', 'first_expression'], 'order': 406, 'point': 3, 'origin': 40, 'isTer': True, 'accept': '<='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'number'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'void'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '*='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '!'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '/'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '!='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '-='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'float'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'int'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '}'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '/='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': ';'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '%='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '&='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '+'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': ','}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '-'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '<'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '^='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'if'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'else'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '#'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '*'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '>'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '&&'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'identifier'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'while'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': ')'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '+='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '=='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': 'return'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '('}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '|='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '>='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '{'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '||'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 0, 'origin': 41, 'isTer': False, 'accept': '<='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': 'number'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': 'void'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '*='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '!'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '/'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '!='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '-='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': 'float'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': 'int'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '}'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '/='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': ';'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '%='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '&='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '+'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': ','}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '-'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '<'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '^='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': 'if'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': 'else'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '#'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '*'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '>'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '&&'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': 'identifier'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': 'while'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': ')'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '+='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '=='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': 'return'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '('}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '|='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '>='}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '{'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '||'}, {'left': 'single_bool_expression', 'right': ['first_expression'], 'order': 407, 'point': 1, 'origin': 41, 'isTer': True, 'accept': '<='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'number'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'void'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '*='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '!'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '/'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '!='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '-='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'float'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'int'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '}'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '/='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': ';'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '%='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '&='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '+'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': ','}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '-'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '<'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '^='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'if'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'else'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '#'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '*'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '>'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '&&'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'identifier'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'while'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': ')'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '+='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '=='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': 'return'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '('}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '|='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '>='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '{'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '||'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 0, 'origin': 42, 'isTer': False, 'accept': '<='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'number'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'void'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '*='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '!'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '/'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '!='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '-='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'float'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'int'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '}'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '/='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': ';'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '%='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '&='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '+'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': ','}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '-'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '<'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '^='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'if'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'else'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '#'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '*'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '>'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '&&'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'identifier'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'while'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': ')'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '+='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '=='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': 'return'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '('}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '|='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '>='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '{'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '||'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 1, 'origin': 42, 'isTer': False, 'accept': '<='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'number'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'void'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '*='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '!'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '/'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '!='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '-='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'float'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'int'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '}'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '/='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': ';'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '%='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '&='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '+'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': ','}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '-'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '<'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '^='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'if'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'else'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '#'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '*'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '>'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '&&'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'identifier'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'while'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': ')'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '+='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '=='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': 'return'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '('}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '|='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '>='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '{'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '||'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 2, 'origin': 42, 'isTer': False, 'accept': '<='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'number'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'void'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '*='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '!'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '/'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '!='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '-='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'float'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'int'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '}'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '/='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': ';'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '%='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '&='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '+'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': ','}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '-'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '<'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '^='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'if'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'else'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '#'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '*'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '>'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '&&'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'identifier'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'while'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': ')'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '+='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '=='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': 'return'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '('}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '|='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '>='}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '{'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '||'}, {'left': 'first_expression', 'right': ['first_expression', 'first_operator', 'second_expression'], 'order': 411, 'point': 3, 'origin': 42, 'isTer': True, 'accept': '<='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'number'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'void'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '*='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '!'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '/'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '!='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '-='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'float'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'int'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '}'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '/='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': ';'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '%='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '&='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '+'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': ','}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '-'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '<'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '^='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'if'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'else'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '#'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '*'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '>'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '&&'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'identifier'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'while'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': ')'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '+='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '=='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': 'return'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '('}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '|='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '>='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '{'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '||'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 0, 'origin': 43, 'isTer': False, 'accept': '<='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': 'number'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': 'void'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '*='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '!'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '/'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '!='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '-='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': 'float'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': 'int'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '}'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '/='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': ';'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '%='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '&='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '+'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': ','}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '-'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '<'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '^='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': 'if'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': 'else'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '#'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '*'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '>'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '&&'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': 'identifier'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': 'while'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': ')'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '+='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '=='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': 'return'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '('}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '|='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '>='}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '{'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '||'}, {'left': 'first_expression', 'right': ['second_expression'], 'order': 412, 'point': 1, 'origin': 43, 'isTer': True, 'accept': '<='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'number'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'void'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '*='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '!'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '/'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '!='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '-='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'float'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'int'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '}'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '/='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': ';'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '%='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '&='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '+'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': ','}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '-'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '<'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '^='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'if'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'else'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '#'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '*'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '>'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '&&'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'identifier'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'while'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': ')'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '+='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '=='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': 'return'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '('}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '|='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '>='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '{'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '||'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 0, 'origin': 44, 'isTer': False, 'accept': '<='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'number'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'void'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '*='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '!'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '/'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '!='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '-='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'float'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'int'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '}'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '/='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': ';'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '%='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '&='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '+'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': ','}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '-'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '<'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '^='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'if'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'else'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '#'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '*'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '>'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '&&'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'identifier'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'while'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': ')'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '+='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '=='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': 'return'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '('}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '|='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '>='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '{'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '||'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 1, 'origin': 44, 'isTer': False, 'accept': '<='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': 'number'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': 'void'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '*='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '!'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '/'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '!='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '-='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': 'float'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': 'int'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '}'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '/='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': ';'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '%='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '&='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '+'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': ','}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '-'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '<'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '^='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': 'if'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': 'else'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '#'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '*'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '>'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '&&'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': 'identifier'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': 'while'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': ')'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '+='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '=='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': 'return'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '('}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '|='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '>='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '{'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '||'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 2, 'origin': 44, 'isTer': False, 'accept': '<='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': 'number'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': 'void'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '*='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '!'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '/'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '!='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '-='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': 'float'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': 'int'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '}'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '/='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': ';'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '%='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '&='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '+'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': ','}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '-'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '<'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '^='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': 'if'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': 'else'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '#'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '*'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '>'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '&&'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': 'identifier'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': 'while'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': ')'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '+='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '=='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': 'return'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '('}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '|='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '>='}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '{'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '||'}, {'left': 'second_expression', 'right': ['second_expression', 'second_operator', 'primary_expression'], 'order': 413, 'point': 3, 'origin': 44, 'isTer': True, 'accept': '<='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'number'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'void'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '*='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '!'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '/'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '!='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '-='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'float'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'int'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '}'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '/='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': ';'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '%='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '&='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '+'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': ','}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '-'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '<'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '^='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'if'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'else'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '#'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '*'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '>'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '&&'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'identifier'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'while'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': ')'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '+='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '=='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': 'return'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '('}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '|='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '>='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '{'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '||'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 0, 'origin': 45, 'isTer': False, 'accept': '<='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': 'number'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': 'void'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '*='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '!'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '/'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '!='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '-='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': 'float'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': 'int'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '}'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '/='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': ';'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '%='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '&='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '+'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': ','}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '-'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '<'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '^='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': 'if'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': 'else'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '#'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '*'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '>'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '&&'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': 'identifier'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': 'while'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': ')'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '+='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '=='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': 'return'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '('}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '|='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '>='}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '{'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '||'}, {'left': 'second_expression', 'right': ['third_expression'], 'order': 414, 'point': 1, 'origin': 45, 'isTer': True, 'accept': '<='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'number'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'void'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '*='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '!'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '/'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '!='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '-='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'float'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'int'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '}'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '/='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': ';'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '%='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '&='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '+'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': ','}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '-'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '<'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '^='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'if'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'else'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '#'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '*'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '>'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '&&'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'identifier'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'while'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': ')'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '+='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '=='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': 'return'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '('}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '|='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '>='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '{'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '||'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 0, 'origin': 46, 'isTer': False, 'accept': '<='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'number'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'void'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '*='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '!'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '/'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '!='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '-='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'float'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'int'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '}'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '/='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': ';'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '%='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '&='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '+'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': ','}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '-'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '<'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '^='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'if'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'else'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '#'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '*'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '>'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '&&'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'identifier'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'while'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': ')'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '+='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '=='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': 'return'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '('}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '|='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '>='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '{'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '||'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 1, 'origin': 46, 'isTer': False, 'accept': '<='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': 'number'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': 'void'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '*='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '!'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '/'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '!='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '-='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': 'float'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': 'int'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '}'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '/='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': ';'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '%='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '&='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '+'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': ','}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '-'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '<'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '^='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': 'if'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': 'else'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '#'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '*'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '>'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '&&'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': 'identifier'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': 'while'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': ')'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '+='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '=='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': 'return'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '('}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '|='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '>='}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '{'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '||'}, {'left': 'third_expression', 'right': ['!', 'primary_expression'], 'order': 415, 'point': 2, 'origin': 46, 'isTer': True, 'accept': '<='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'number'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'void'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '*='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '!'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '/'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '!='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '-='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'float'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'int'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '}'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '/='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': ';'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '%='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '&='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '+'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': ','}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '-'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '<'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '^='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'if'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'else'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '#'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '*'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '>'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '&&'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'identifier'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'while'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': ')'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '+='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '=='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': 'return'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '('}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '|='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '>='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '{'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '||'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 0, 'origin': 47, 'isTer': False, 'accept': '<='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'number'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'void'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '*='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '!'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '/'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '!='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '-='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'float'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'int'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '}'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '/='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': ';'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '%='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '&='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '+'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': ','}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '-'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '<'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '^='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'if'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'else'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '#'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '*'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '>'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '&&'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'identifier'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'while'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': ')'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '+='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '=='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': 'return'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '('}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '|='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '>='}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '{'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '||'}, {'left': 'third_expression', 'right': ['primary_expression'], 'order': 416, 'point': 1, 'origin': 47, 'isTer': True, 'accept': '<='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'number'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'void'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '*='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '!'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '/'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '!='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '-='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'float'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'int'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '}'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '/='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': ';'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '%='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '&='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '+'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': ','}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '-'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '<'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '^='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'if'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'else'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '#'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '*'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '>'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '&&'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'identifier'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'while'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': ')'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '+='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '=='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': 'return'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '('}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '|='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '>='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '{'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '||'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 0, 'origin': 48, 'isTer': False, 'accept': '<='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': 'number'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': 'void'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '*='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '!'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '/'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '!='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '-='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': 'float'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': 'int'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '}'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '/='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': ';'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '%='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '&='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '+'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': ','}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '-'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '<'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '^='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': 'if'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': 'else'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '#'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '*'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '>'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '&&'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': 'identifier'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': 'while'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': ')'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '+='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '=='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': 'return'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '('}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '|='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '>='}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '{'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '||'}, {'left': 'or_operator', 'right': ['||'], 'order': 501, 'point': 1, 'origin': 48, 'isTer': True, 'accept': '<='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'number'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'void'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '*='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '!'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '/'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '!='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '-='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'float'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'int'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '}'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '/='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': ';'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '%='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '&='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '+'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': ','}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '-'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '<'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '^='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'if'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'else'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '#'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '*'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '>'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '&&'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'identifier'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'while'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': ')'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '+='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '=='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': 'return'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '('}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '|='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '>='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '{'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '||'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 0, 'origin': 49, 'isTer': False, 'accept': '<='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': 'number'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': 'void'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '*='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '!'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '/'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '!='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '-='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': 'float'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': 'int'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '}'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '/='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': ';'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '%='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '&='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '+'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': ','}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '-'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '<'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '^='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': 'if'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': 'else'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '#'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '*'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '>'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '&&'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': 'identifier'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': 'while'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': ')'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '+='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '=='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': 'return'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '('}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '|='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '>='}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '{'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '||'}, {'left': 'and_operator', 'right': ['&&'], 'order': 502, 'point': 1, 'origin': 49, 'isTer': True, 'accept': '<='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'number'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'void'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '*='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '!'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '/'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '!='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '-='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'float'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'int'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '}'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '/='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': ';'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '%='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '&='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '+'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': ','}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '-'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '<'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '^='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'if'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'else'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '#'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '*'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '>'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '&&'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'identifier'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'while'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': ')'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '+='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '=='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': 'return'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '('}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '|='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '>='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '{'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '||'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 0, 'origin': 50, 'isTer': False, 'accept': '<='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': 'number'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': 'void'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '*='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '!'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '/'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '!='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '-='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': 'float'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': 'int'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '}'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '/='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': ';'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '%='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '&='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '+'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': ','}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '-'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '<'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '^='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': 'if'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': 'else'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '#'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '*'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '>'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '&&'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': 'identifier'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': 'while'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': ')'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '+='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '=='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': 'return'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '('}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '|='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '>='}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '{'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '||'}, {'left': 'bool_operator', 'right': ['<'], 'order': 503, 'point': 1, 'origin': 50, 'isTer': True, 'accept': '<='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'number'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'void'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '*='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '!'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '/'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '!='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '-='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'float'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'int'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '}'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '/='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': ';'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '%='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '&='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '+'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': ','}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '-'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '<'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '^='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'if'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'else'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '#'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '*'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '>'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '&&'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'identifier'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'while'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': ')'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '+='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '=='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': 'return'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '('}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '|='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '>='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '{'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '||'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 0, 'origin': 51, 'isTer': False, 'accept': '<='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': 'number'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': 'void'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '*='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '!'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '/'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '!='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '-='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': 'float'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': 'int'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '}'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '/='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': ';'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '%='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '&='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '+'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': ','}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '-'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '<'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '^='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': 'if'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': 'else'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '#'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '*'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '>'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '&&'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': 'identifier'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': 'while'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': ')'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '+='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '=='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': 'return'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '('}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '|='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '>='}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '{'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '||'}, {'left': 'bool_operator', 'right': ['>'], 'order': 504, 'point': 1, 'origin': 51, 'isTer': True, 'accept': '<='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'number'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'void'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '*='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '!'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '/'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '!='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '-='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'float'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'int'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '}'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '/='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': ';'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '%='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '&='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '+'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': ','}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '-'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '<'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '^='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'if'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'else'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '#'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '*'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '>'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '&&'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'identifier'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'while'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': ')'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '+='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '=='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': 'return'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '('}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '|='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '>='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '{'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '||'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 0, 'origin': 52, 'isTer': False, 'accept': '<='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': 'number'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': 'void'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '*='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '!'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '/'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '!='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '-='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': 'float'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': 'int'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '}'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '/='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': ';'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '%='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '&='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '+'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': ','}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '-'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '<'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '^='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': 'if'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': 'else'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '#'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '*'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '>'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '&&'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': 'identifier'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': 'while'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': ')'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '+='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '=='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': 'return'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '('}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '|='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '>='}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '{'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '||'}, {'left': 'bool_operator', 'right': ['!='], 'order': 505, 'point': 1, 'origin': 52, 'isTer': True, 'accept': '<='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'number'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'void'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '*='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '!'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '/'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '!='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '-='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'float'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'int'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '}'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '/='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': ';'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '%='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '&='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '+'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': ','}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '-'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '<'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '^='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'if'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'else'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '#'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '*'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '>'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '&&'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'identifier'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'while'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': ')'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '+='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '=='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': 'return'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '('}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '|='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '>='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '{'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '||'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 0, 'origin': 53, 'isTer': False, 'accept': '<='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'number'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'void'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '*='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '!'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '/'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '!='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '-='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'float'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'int'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '}'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '/='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': ';'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '%='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '&='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '+'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': ','}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '-'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '<'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '^='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'if'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'else'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '#'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '*'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '>'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '&&'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'identifier'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'while'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': ')'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '+='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '=='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': 'return'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '('}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '|='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '>='}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '{'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '||'}, {'left': 'bool_operator', 'right': ['=='], 'order': 506, 'point': 1, 'origin': 53, 'isTer': True, 'accept': '<='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'number'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'void'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '*='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '!'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '/'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '!='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '-='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'float'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'int'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '}'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '/='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': ';'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '%='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '&='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '+'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': ','}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '-'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '<'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '^='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'if'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'else'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '#'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '*'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '>'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '&&'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'identifier'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'while'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': ')'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '+='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '=='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': 'return'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '('}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '|='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '>='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '{'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '||'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 0, 'origin': 54, 'isTer': False, 'accept': '<='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': 'number'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': 'void'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '*='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '!'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '/'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '!='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '-='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': 'float'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': 'int'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '}'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '/='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': ';'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '%='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '&='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '+'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': ','}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '-'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '<'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '^='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': 'if'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': 'else'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '#'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '*'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '>'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '&&'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': 'identifier'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': 'while'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': ')'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '+='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '=='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': 'return'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '('}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '|='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '>='}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '{'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '||'}, {'left': 'bool_operator', 'right': ['<='], 'order': 507, 'point': 1, 'origin': 54, 'isTer': True, 'accept': '<='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': 'number'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': 'void'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '*='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '!'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '/'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '!='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '-='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': 'float'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': 'int'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '}'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '/='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': ';'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '%='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '&='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '+'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': ','}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '-'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '<'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '^='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': 'if'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': 'else'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '#'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '*'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '>'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '&&'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': 'identifier'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': 'while'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': ')'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '+='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '=='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': 'return'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '('}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '|='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '>='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '{'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '||'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 0, 'origin': 55, 'isTer': False, 'accept': '<='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': 'number'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': 'void'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '*='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '!'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '/'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '!='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '-='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': 'float'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': 'int'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '}'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '/='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': ';'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '%='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '&='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '+'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': ','}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '-'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '<'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '^='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': 'if'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': 'else'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '#'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '*'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '>'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '&&'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': 'identifier'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': 'while'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': ')'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '+='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '=='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': 'return'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '('}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '|='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '>='}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '{'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '||'}, {'left': 'bool_operator', 'right': ['>='], 'order': 508, 'point': 1, 'origin': 55, 'isTer': True, 'accept': '<='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'number'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'void'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '*='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '!'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '/'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '!='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '-='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'float'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'int'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '}'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '/='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': ';'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '%='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '&='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '+'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': ','}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '-'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '<'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '^='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'if'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'else'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '#'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '*'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '>'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '&&'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'identifier'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'while'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': ')'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '+='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '=='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': 'return'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '('}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '|='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '>='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '{'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '||'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 0, 'origin': 56, 'isTer': False, 'accept': '<='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'number'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'void'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '*='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '!'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '/'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '!='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '-='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'float'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'int'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '}'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '/='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': ';'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '%='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '&='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '+'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': ','}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '-'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '<'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '^='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'if'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'else'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '#'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '*'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '>'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '&&'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'identifier'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'while'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': ')'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '+='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '=='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': 'return'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '('}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '|='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '>='}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '{'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '||'}, {'left': 'first_operator', 'right': ['+'], 'order': 511, 'point': 1, 'origin': 56, 'isTer': True, 'accept': '<='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'number'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'void'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '*='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '!'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '/'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '!='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '-='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'float'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'int'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '}'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '/='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': ';'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '%='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '&='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '+'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': ','}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '-'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '<'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '^='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'if'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'else'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '#'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '*'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '>'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '&&'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'identifier'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'while'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': ')'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '+='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '=='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': 'return'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '('}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '|='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '>='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '{'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '||'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 0, 'origin': 57, 'isTer': False, 'accept': '<='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': 'number'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': 'void'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '*='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '!'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '/'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '!='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '-='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': 'float'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': 'int'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '}'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '/='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': ';'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '%='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '&='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '+'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': ','}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '-'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '<'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '^='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': 'if'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': 'else'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '#'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '*'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '>'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '&&'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': 'identifier'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': 'while'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': ')'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '+='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '=='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': 'return'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '('}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '|='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '>='}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '{'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '||'}, {'left': 'first_operator', 'right': ['-'], 'order': 512, 'point': 1, 'origin': 57, 'isTer': True, 'accept': '<='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'number'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'void'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '*='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '!'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '/'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '!='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '-='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'float'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'int'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '}'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '/='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': ';'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '%='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '&='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '+'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': ','}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '-'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '<'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '^='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'if'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'else'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '#'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '*'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '>'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '&&'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'identifier'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'while'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': ')'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '+='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '=='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': 'return'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '('}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '|='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '>='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '{'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '||'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 0, 'origin': 58, 'isTer': False, 'accept': '<='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': 'number'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': 'void'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '*='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '!'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '/'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '!='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '-='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': 'float'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': 'int'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '}'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '/='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': ';'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '%='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '&='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '+'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': ','}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '-'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '<'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '^='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': 'if'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': 'else'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '#'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '*'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '>'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '&&'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': 'identifier'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': 'while'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': ')'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '+='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '=='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': 'return'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '('}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '|='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '>='}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '{'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '||'}, {'left': 'second_operator', 'right': ['*'], 'order': 513, 'point': 1, 'origin': 58, 'isTer': True, 'accept': '<='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'number'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'void'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '*='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '!'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '/'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '!='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '-='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'float'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'int'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '}'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '/='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': ';'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '%='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '&='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '+'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': ','}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '-'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '<'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '^='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'if'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'else'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '#'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '*'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '>'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '&&'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'identifier'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'while'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': ')'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '+='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '=='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': 'return'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '('}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '|='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '>='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '{'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '||'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 0, 'origin': 59, 'isTer': False, 'accept': '<='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'number'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'void'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '*='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '!'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '/'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '!='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '-='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'float'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'int'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '}'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '/='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': ';'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '%='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '&='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '+'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': ','}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '-'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '<'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '^='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'if'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'else'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '#'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '*'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '>'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '&&'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'identifier'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'while'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': ')'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '+='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '=='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': 'return'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '('}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '|='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '>='}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '{'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '||'}, {'left': 'second_operator', 'right': ['/'], 'order': 514, 'point': 1, 'origin': 59, 'isTer': True, 'accept': '<='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'number'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'void'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '*='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '!'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '/'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '!='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '-='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'float'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'int'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '}'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '/='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': ';'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '%='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '&='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '+'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': ','}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '-'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '<'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '^='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'if'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'else'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '#'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '*'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '>'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '&&'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'while'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': ')'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '+='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '=='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': 'return'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '('}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '|='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '>='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '{'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '||'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 0, 'origin': 60, 'isTer': False, 'accept': '<='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'number'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'void'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '*='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '!'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '/'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '!='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '-='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'float'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'int'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '}'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '/='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': ';'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '%='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '&='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '+'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': ','}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '-'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '<'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '^='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'if'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'else'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '#'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '*'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '>'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '&&'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'while'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': ')'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '+='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '=='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': 'return'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '('}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '|='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '>='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '{'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '||'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 1, 'origin': 60, 'isTer': False, 'accept': '<='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'number'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'void'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '*='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '!'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '/'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '!='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '-='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'float'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'int'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '}'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '/='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': ';'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '%='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '&='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '+'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': ','}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '-'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '<'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '^='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'if'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'else'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '#'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '*'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '>'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '&&'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'while'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': ')'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '+='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '=='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': 'return'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '('}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '|='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '>='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '{'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '||'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 2, 'origin': 60, 'isTer': False, 'accept': '<='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': 'number'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': 'void'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '*='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '!'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '/'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '!='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '-='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': 'float'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': 'int'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '}'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '/='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': ';'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '%='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '&='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '+'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': ','}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '-'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '<'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '^='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': 'if'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': 'else'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '#'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '*'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '>'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '&&'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': 'while'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': ')'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '+='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '=='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': 'return'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '('}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '|='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '>='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '{'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '||'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 3, 'origin': 60, 'isTer': False, 'accept': '<='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': 'number'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': 'void'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '*='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '!'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '/'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '!='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '-='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': 'float'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': 'int'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '}'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '/='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': ';'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '%='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '&='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '+'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': ','}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '-'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '<'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '^='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': 'if'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': 'else'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '#'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '*'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '>'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '&&'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': 'while'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': ')'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '+='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '=='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': 'return'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '('}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '|='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '>='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '{'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '||'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 4, 'origin': 60, 'isTer': False, 'accept': '<='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': 'number'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': 'void'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '*='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '!'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '/'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '!='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '-='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': 'float'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': 'int'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '}'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '/='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': ';'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '%='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '&='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '+'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': ','}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '-'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '<'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '^='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': 'if'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': 'else'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '#'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '*'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '>'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '&&'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': 'while'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': ')'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '+='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '=='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': 'return'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '('}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '|='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '>='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '{'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '||'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 5, 'origin': 60, 'isTer': False, 'accept': '<='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': 'number'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': 'void'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '*='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '!'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '/'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '!='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '-='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': 'float'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': 'int'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '}'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '/='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': ';'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '%='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '&='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '+'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': ','}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '-'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '<'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '^='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': 'if'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': 'else'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '#'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '*'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '>'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '&&'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': 'while'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': ')'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '+='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '=='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': 'return'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '('}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '|='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '>='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '{'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '||'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 6, 'origin': 60, 'isTer': False, 'accept': '<='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': 'number'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': 'void'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '*='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '!'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '/'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '!='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '-='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': 'float'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': 'int'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '}'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '/='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': ';'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '%='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '&='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '+'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': ','}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '-'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '<'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '^='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': 'if'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': 'else'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '#'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '*'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '>'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '&&'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': 'identifier'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': 'while'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': ')'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '+='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '=='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': 'return'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '('}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '|='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '>='}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '{'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '||'}, {'left': 'function_definition', 'right': ['type_specifier', 'identifier', 'M_function_definition', '(', 'function_parameter_list', ')', 'compound_statement'], 'order': 601, 'point': 7, 'origin': 60, 'isTer': True, 'accept': '<='}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'number'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'void'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '*='}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '!'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '/'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '!='}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '-='}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'float'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'int'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '}'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '/='}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': ';'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '%='}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '&='}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '+'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': ','}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '-'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '<'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '^='}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'if'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'else'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '#'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '*'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '>'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '&&'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'identifier'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'while'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': ')'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '+='}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '=='}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': 'return'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '='}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '('}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '|='}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '>='}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '{'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '||'}, {'left': 'M_function_definition', 'right': [], 'order': 602, 'point': 0, 'origin': 61, 'isTer': True, 'accept': '<='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'number'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'void'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '*='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '!'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '/'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '!='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '-='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'float'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'int'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '}'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '/='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': ';'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '%='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '&='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '+'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': ','}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '-'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '<'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '^='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'if'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'else'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '#'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '*'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '>'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '&&'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'while'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': ')'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '+='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '=='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': 'return'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '('}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '|='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '>='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '{'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '||'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 0, 'origin': 62, 'isTer': False, 'accept': '<='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': 'number'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': 'void'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '*='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '!'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '/'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '!='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '-='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': 'float'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': 'int'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '}'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '/='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': ';'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '%='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '&='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '+'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': ','}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '-'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '<'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '^='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': 'if'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': 'else'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '#'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '*'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '>'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '&&'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': 'while'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': ')'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '+='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '=='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': 'return'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '('}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '|='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '>='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '{'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '||'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 1, 'origin': 62, 'isTer': False, 'accept': '<='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': 'number'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': 'void'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '*='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '!'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '/'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '!='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '-='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': 'float'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': 'int'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '}'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '/='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': ';'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '%='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '&='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '+'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': ','}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '-'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '<'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '^='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': 'if'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': 'else'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '#'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '*'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '>'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '&&'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': 'identifier'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': 'while'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': ')'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '+='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '=='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': 'return'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '('}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '|='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '>='}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '{'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '||'}, {'left': 'function_parameter_list', 'right': ['function_parameter', 'function_parameter_list_suffix'], 'order': 611, 'point': 2, 'origin': 62, 'isTer': True, 'accept': '<='}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': 'number'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': 'void'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '*='}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '!'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '/'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '!='}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '-='}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': 'float'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': 'int'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '}'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '/='}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': ';'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '%='}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '&='}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '+'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': ','}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '-'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '<'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '^='}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': 'if'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': 'else'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '#'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '*'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '>'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '&&'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': 'identifier'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': 'while'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': ')'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '+='}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '=='}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': 'return'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '='}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '('}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '|='}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '>='}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '{'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '||'}, {'left': 'function_parameter_list', 'right': [], 'order': 612, 'point': 0, 'origin': 63, 'isTer': True, 'accept': '<='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'number'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'void'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '*='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '!'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '/'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '!='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '-='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'float'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'int'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '}'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '/='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': ';'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '%='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '&='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '+'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': ','}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '-'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '<'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '^='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'if'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'else'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '#'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '*'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '>'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '&&'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'while'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': ')'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '+='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '=='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': 'return'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '('}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '|='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '>='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '{'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '||'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 0, 'origin': 64, 'isTer': False, 'accept': '<='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'number'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'void'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '*='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '!'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '/'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '!='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '-='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'float'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'int'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '}'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '/='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': ';'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '%='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '&='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '+'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': ','}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '-'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '<'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '^='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'if'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'else'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '#'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '*'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '>'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '&&'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'identifier'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'while'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': ')'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '+='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '=='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': 'return'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '('}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '|='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '>='}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '{'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '||'}, {'left': 'function_parameter_list', 'right': ['void'], 'order': 613, 'point': 1, 'origin': 64, 'isTer': True, 'accept': '<='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'number'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'void'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '*='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '!'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '/'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '!='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '-='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'float'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'int'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '}'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '/='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': ';'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '%='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '&='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '+'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': ','}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '-'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '<'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '^='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'if'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'else'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '#'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '*'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '>'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '&&'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'while'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': ')'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '+='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '=='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': 'return'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '('}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '|='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '>='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '{'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '||'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 0, 'origin': 65, 'isTer': False, 'accept': '<='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'number'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'void'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '*='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '!'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '/'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '!='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '-='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'float'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'int'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '}'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '/='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': ';'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '%='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '&='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '+'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': ','}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '-'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '<'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '^='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'if'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'else'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '#'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '*'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '>'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '&&'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'while'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': ')'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '+='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '=='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': 'return'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '('}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '|='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '>='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '{'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '||'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 1, 'origin': 65, 'isTer': False, 'accept': '<='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': 'number'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': 'void'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '*='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '!'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '/'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '!='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '-='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': 'float'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': 'int'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '}'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '/='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': ';'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '%='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '&='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '+'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': ','}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '-'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '<'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '^='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': 'if'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': 'else'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '#'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '*'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '>'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '&&'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': 'while'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': ')'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '+='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '=='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': 'return'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '('}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '|='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '>='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '{'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '||'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 2, 'origin': 65, 'isTer': False, 'accept': '<='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': 'number'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': 'void'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '*='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '!'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '/'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '!='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '-='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': 'float'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': 'int'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '}'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '/='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': ';'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '%='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '&='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '+'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': ','}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '-'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '<'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '^='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': 'if'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': 'else'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '#'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '*'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '>'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '&&'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': 'identifier'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': 'while'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': ')'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '+='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '=='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': 'return'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '('}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '|='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '>='}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '{'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '||'}, {'left': 'function_parameter_list_suffix', 'right': [',', 'function_parameter', 'function_parameter_list_suffix'], 'order': 614, 'point': 3, 'origin': 65, 'isTer': True, 'accept': '<='}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'number'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'void'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '*='}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '!'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '/'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '!='}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '-='}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'float'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'int'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '}'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '/='}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': ';'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '%='}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '&='}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '+'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': ','}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '-'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '<'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '^='}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'if'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'else'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '#'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '*'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '>'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '&&'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'identifier'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'while'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': ')'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '+='}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '=='}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': 'return'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '='}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '('}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '|='}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '>='}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '{'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '||'}, {'left': 'function_parameter_list_suffix', 'right': [], 'order': 615, 'point': 0, 'origin': 66, 'isTer': True, 'accept': '<='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'number'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'void'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '*='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '!'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '/'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '!='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '-='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'float'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'int'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '}'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '/='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': ';'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '%='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '&='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '+'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': ','}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '-'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '<'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '^='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'if'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'else'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '#'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '*'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '>'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '&&'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'while'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': ')'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '+='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '=='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': 'return'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '('}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '|='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '>='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '{'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '||'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 0, 'origin': 67, 'isTer': False, 'accept': '<='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'number'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'void'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '*='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '!'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '/'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '!='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '-='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'float'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'int'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '}'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '/='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': ';'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '%='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '&='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '+'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': ','}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '-'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '<'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '^='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'if'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'else'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '#'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '*'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '>'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '&&'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'identifier'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'while'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': ')'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '+='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '=='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': 'return'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '('}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '|='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '>='}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '{'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '||'}, {'left': 'function_parameter_list_suffix', 'right': ['void'], 'order': 616, 'point': 1, 'origin': 67, 'isTer': True, 'accept': '<='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'number'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'void'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '*='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '!'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '/'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '!='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '-='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'float'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'int'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '}'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '/='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': ';'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '%='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '&='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '+'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': ','}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '-'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '<'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '^='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'if'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'else'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '#'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '*'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '>'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '&&'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'while'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': ')'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '+='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '=='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': 'return'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '('}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '|='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '>='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '{'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '||'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 0, 'origin': 68, 'isTer': False, 'accept': '<='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'number'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'void'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '*='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '!'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '/'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '!='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '-='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'float'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'int'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '}'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '/='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': ';'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '%='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '&='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '+'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': ','}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '-'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '<'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '^='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'if'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'else'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '#'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '*'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '>'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '&&'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'identifier'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'while'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': ')'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '+='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '=='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': 'return'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '('}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '|='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '>='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '{'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '||'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 1, 'origin': 68, 'isTer': False, 'accept': '<='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'number'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'void'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '*='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '!'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '/'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '!='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '-='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'float'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'int'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '}'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '/='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': ';'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '%='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '&='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '+'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': ','}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '-'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '<'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '^='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'if'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'else'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '#'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '*'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '>'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '&&'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'identifier'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'while'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': ')'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '+='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '=='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': 'return'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '('}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '|='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '>='}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '{'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '||'}, {'left': 'function_parameter', 'right': ['type_specifier', 'identifier'], 'order': 617, 'point': 2, 'origin': 68, 'isTer': True, 'accept': '<='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'number'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'void'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '*='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '!'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '/'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '!='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '-='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'float'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'int'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '}'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '/='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': ';'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '%='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '&='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '+'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': ','}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '-'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '<'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '^='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'if'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'else'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '#'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '*'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '>'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '&&'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'identifier'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'while'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': ')'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '+='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '=='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': 'return'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '('}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '|='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '>='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '{'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '||'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 0, 'origin': 69, 'isTer': False, 'accept': '<='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'number'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'void'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '*='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '!'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '/'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '!='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '-='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'float'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'int'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '}'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '/='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': ';'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '%='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '&='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '+'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': ','}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '-'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '<'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '^='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'if'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'else'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '#'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '*'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '>'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '&&'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'identifier'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'while'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': ')'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '+='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '=='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': 'return'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '('}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '|='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '>='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '{'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '||'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 1, 'origin': 69, 'isTer': False, 'accept': '<='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': 'number'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': 'void'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '*='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '!'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '/'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '!='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '-='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': 'float'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': 'int'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '}'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '/='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': ';'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '%='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '&='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '+'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': ','}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '-'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '<'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '^='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': 'if'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': 'else'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '#'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '*'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '>'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '&&'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': 'identifier'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': 'while'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': ')'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '+='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '=='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': 'return'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '('}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '|='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '>='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '{'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '||'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 2, 'origin': 69, 'isTer': False, 'accept': '<='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': 'number'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': 'void'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '*='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '!'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '/'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '!='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '-='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': 'float'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': 'int'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '}'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '/='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': ';'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '%='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '&='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '+'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': ','}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '-'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '<'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '^='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': 'if'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': 'else'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '#'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '*'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '>'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '&&'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': 'identifier'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': 'while'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': ')'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '+='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '=='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': 'return'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '('}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '|='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '>='}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '{'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '||'}, {'left': 'compound_statement', 'right': ['{', 'statement_list', '}'], 'order': 701, 'point': 3, 'origin': 69, 'isTer': True, 'accept': '<='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'number'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'void'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '*='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '!'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '/'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '!='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '-='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'float'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'int'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '}'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '/='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': ';'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '%='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '&='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '+'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': ','}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '-'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '<'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '^='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'if'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'else'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '#'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '*'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '>'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '&&'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'identifier'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'while'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': ')'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '+='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '=='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': 'return'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '('}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '|='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '>='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '{'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '||'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 0, 'origin': 70, 'isTer': False, 'accept': '<='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'number'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'void'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '*='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '!'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '/'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '!='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '-='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'float'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'int'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '}'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '/='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': ';'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '%='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '&='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '+'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': ','}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '-'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '<'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '^='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'if'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'else'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '#'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '*'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '>'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '&&'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'identifier'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'while'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': ')'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '+='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '=='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': 'return'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '('}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '|='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '>='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '{'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '||'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 1, 'origin': 70, 'isTer': False, 'accept': '<='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': 'number'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': 'void'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '*='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '!'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '/'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '!='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '-='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': 'float'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': 'int'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '}'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '/='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': ';'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '%='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '&='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '+'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': ','}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '-'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '<'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '^='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': 'if'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': 'else'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '#'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '*'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '>'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '&&'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': 'identifier'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': 'while'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': ')'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '+='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '=='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': 'return'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '('}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '|='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '>='}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '{'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '||'}, {'left': 'statement_list', 'right': ['statement_list', 'statement'], 'order': 711, 'point': 2, 'origin': 70, 'isTer': True, 'accept': '<='}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': 'number'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': 'void'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '*='}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '!'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '/'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '!='}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '-='}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': 'float'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': 'int'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '}'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '/='}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': ';'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '%='}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '&='}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '+'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': ','}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '-'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '<'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '^='}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': 'if'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': 'else'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '#'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '*'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '>'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '&&'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': 'identifier'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': 'while'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': ')'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '+='}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '=='}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': 'return'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '='}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '('}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '|='}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '>='}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '{'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '||'}, {'left': 'statement_list', 'right': [], 'order': 712, 'point': 0, 'origin': 71, 'isTer': True, 'accept': '<='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'number'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'void'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '*='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '!'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '/'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '!='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '-='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'float'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'int'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '}'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '/='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': ';'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '%='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '&='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '+'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': ','}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '-'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '<'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '^='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'if'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'else'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '#'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '*'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '>'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '&&'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'identifier'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'while'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': ')'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '+='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '=='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': 'return'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '('}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '|='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '>='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '{'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '||'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 0, 'origin': 72, 'isTer': False, 'accept': '<='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'number'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'void'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '*='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '!'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '/'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '!='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '-='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'float'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'int'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '}'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '/='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': ';'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '%='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '&='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '+'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': ','}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '-'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '<'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '^='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'if'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'else'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '#'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '*'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '>'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '&&'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'identifier'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'while'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': ')'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '+='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '=='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': 'return'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '('}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '|='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '>='}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '{'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '||'}, {'left': 'statement', 'right': ['expression_statement'], 'order': 713, 'point': 1, 'origin': 72, 'isTer': True, 'accept': '<='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'number'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'void'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '*='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '!'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '/'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '!='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '-='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'float'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'int'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '}'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '/='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': ';'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '%='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '&='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '+'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': ','}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '-'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '<'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '^='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'if'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'else'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '#'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '*'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '>'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '&&'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'identifier'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'while'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': ')'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '+='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '=='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': 'return'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '('}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '|='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '>='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '{'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '||'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 0, 'origin': 73, 'isTer': False, 'accept': '<='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': 'number'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': 'void'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '*='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '!'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '/'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '!='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '-='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': 'float'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': 'int'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '}'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '/='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': ';'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '%='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '&='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '+'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': ','}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '-'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '<'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '^='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': 'if'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': 'else'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '#'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '*'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '>'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '&&'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': 'identifier'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': 'while'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': ')'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '+='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '=='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': 'return'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '('}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '|='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '>='}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '{'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '||'}, {'left': 'statement', 'right': ['jump_statement'], 'order': 714, 'point': 1, 'origin': 73, 'isTer': True, 'accept': '<='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'number'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'void'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '*='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '!'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '/'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '!='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '-='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'float'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'int'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '}'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '/='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': ';'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '%='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '&='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '+'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': ','}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '-'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '<'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '^='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'if'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'else'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '#'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '*'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '>'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '&&'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'identifier'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'while'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': ')'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '+='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '=='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': 'return'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '('}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '|='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '>='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '{'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '||'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 0, 'origin': 74, 'isTer': False, 'accept': '<='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': 'number'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': 'void'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '*='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '!'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '/'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '!='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '-='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': 'float'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': 'int'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '}'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '/='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': ';'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '%='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '&='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '+'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': ','}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '-'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '<'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '^='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': 'if'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': 'else'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '#'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '*'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '>'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '&&'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': 'identifier'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': 'while'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': ')'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '+='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '=='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': 'return'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '('}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '|='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '>='}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '{'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '||'}, {'left': 'statement', 'right': ['selection_statement'], 'order': 715, 'point': 1, 'origin': 74, 'isTer': True, 'accept': '<='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'number'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'void'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '*='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '!'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '/'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '!='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '-='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'float'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'int'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '}'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '/='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': ';'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '%='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '&='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '+'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': ','}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '-'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '<'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '^='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'if'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'else'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '#'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '*'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '>'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '&&'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'identifier'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'while'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': ')'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '+='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '=='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': 'return'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '('}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '|='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '>='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '{'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '||'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 0, 'origin': 75, 'isTer': False, 'accept': '<='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': 'number'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': 'void'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '*='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '!'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '/'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '!='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '-='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': 'float'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': 'int'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '}'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '/='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': ';'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '%='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '&='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '+'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': ','}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '-'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '<'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '^='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': 'if'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': 'else'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '#'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '*'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '>'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '&&'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': 'identifier'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': 'while'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': ')'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '+='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '=='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': 'return'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '('}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '|='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '>='}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '{'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '||'}, {'left': 'statement', 'right': ['iteration_statement'], 'order': 716, 'point': 1, 'origin': 75, 'isTer': True, 'accept': '<='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'number'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'void'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '*='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '!'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '/'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '!='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '-='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'float'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'int'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '}'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '/='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': ';'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '%='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '&='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '+'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': ','}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '-'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '<'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '^='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'if'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'else'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '#'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '*'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '>'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '&&'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'identifier'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'while'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': ')'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '+='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '=='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': 'return'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '('}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '|='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '>='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '{'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '||'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 0, 'origin': 76, 'isTer': False, 'accept': '<='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': 'number'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': 'void'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '*='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '!'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '/'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '!='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '-='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': 'float'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': 'int'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '}'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '/='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': ';'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '%='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '&='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '+'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': ','}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '-'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '<'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '^='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': 'if'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': 'else'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '#'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '*'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '>'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '&&'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': 'identifier'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': 'while'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': ')'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '+='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '=='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': 'return'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '('}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '|='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '>='}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '{'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '||'}, {'left': 'statement', 'right': ['compound_statement'], 'order': 717, 'point': 1, 'origin': 76, 'isTer': True, 'accept': '<='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'number'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'void'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '*='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '!'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '/'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '!='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '-='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'float'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'int'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '}'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '/='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': ';'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '%='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '&='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '+'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': ','}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '-'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '<'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '^='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'if'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'else'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '#'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '*'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '>'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '&&'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'identifier'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'while'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': ')'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '+='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '=='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': 'return'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '('}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '|='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '>='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '{'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '||'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 0, 'origin': 77, 'isTer': False, 'accept': '<='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': 'number'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': 'void'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '*='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '!'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '/'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '!='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '-='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': 'float'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': 'int'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '}'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '/='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': ';'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '%='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '&='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '+'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': ','}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '-'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '<'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '^='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': 'if'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': 'else'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '#'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '*'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '>'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '&&'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': 'identifier'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': 'while'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': ')'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '+='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '=='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': 'return'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '('}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '|='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '>='}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '{'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '||'}, {'left': 'statement', 'right': ['declaration'], 'order': 718, 'point': 1, 'origin': 77, 'isTer': True, 'accept': '<='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'number'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'void'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '*='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '!'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '/'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '!='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '-='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'float'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'int'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '}'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '/='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': ';'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '%='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '&='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '+'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': ','}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '-'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '<'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '^='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'if'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'else'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '#'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '*'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '>'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '&&'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'identifier'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'while'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': ')'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '+='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '=='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': 'return'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '('}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '|='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '>='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '{'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '||'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 0, 'origin': 78, 'isTer': False, 'accept': '<='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'number'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'void'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '*='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '!'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '/'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '!='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '-='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'float'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'int'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '}'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '/='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': ';'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '%='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '&='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '+'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': ','}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '-'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '<'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '^='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'if'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'else'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '#'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '*'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '>'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '&&'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'identifier'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'while'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': ')'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '+='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '=='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': 'return'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '('}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '|='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '>='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '{'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '||'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 1, 'origin': 78, 'isTer': False, 'accept': '<='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': 'number'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': 'void'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '*='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '!'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '/'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '!='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '-='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': 'float'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': 'int'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '}'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '/='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': ';'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '%='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '&='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '+'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': ','}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '-'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '<'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '^='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': 'if'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': 'else'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '#'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '*'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '>'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '&&'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': 'identifier'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': 'while'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': ')'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '+='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '=='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': 'return'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '('}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '|='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '>='}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '{'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '||'}, {'left': 'expression_statement', 'right': ['assignment_expression_list', ';'], 'order': 721, 'point': 2, 'origin': 78, 'isTer': True, 'accept': '<='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '*='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '!'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '/'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '!='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '-='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '}'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '/='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': ';'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '%='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '&='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '+'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': ','}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '-'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '<'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '^='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '#'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '*'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '>'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': ')'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '+='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '=='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '('}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '|='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '>='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '{'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '||'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 0, 'origin': 79, 'isTer': False, 'accept': '<='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '*='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '!'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '/'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '!='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '-='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '}'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '/='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': ';'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '%='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '&='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '+'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': ','}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '-'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '<'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '^='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '#'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '*'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '>'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': ')'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '+='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '=='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '('}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '|='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '>='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '{'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '||'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 1, 'origin': 79, 'isTer': False, 'accept': '<='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '*='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '!'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '/'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '!='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '-='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '}'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '/='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': ';'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '%='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '&='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '+'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': ','}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '-'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '<'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '^='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '#'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '*'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '>'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': ')'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '+='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '=='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '('}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '|='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '>='}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '{'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '||'}, {'left': 'assignment_expression_list', 'right': ['assignment_expression', 'assignment_expression_list_suffix'], 'order': 722, 'point': 2, 'origin': 79, 'isTer': True, 'accept': '<='}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '*='}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '!'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '/'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '!='}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '-='}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '}'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '/='}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': ';'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '%='}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '&='}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '+'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': ','}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '-'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '<'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '^='}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '#'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '*'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '>'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': ')'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '+='}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '=='}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '='}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '('}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '|='}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '>='}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '{'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '||'}, {'left': 'assignment_expression_list', 'right': [], 'order': 723, 'point': 0, 'origin': 80, 'isTer': True, 'accept': '<='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '*='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '!'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '/'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '!='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '-='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '}'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '/='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': ';'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '%='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '&='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '+'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': ','}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '-'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '<'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '^='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '#'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '*'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '>'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': ')'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '+='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '=='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '('}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '|='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '>='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '{'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '||'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 0, 'origin': 81, 'isTer': False, 'accept': '<='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '*='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '!'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '/'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '!='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '-='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '}'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '/='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': ';'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '%='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '&='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '+'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': ','}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '-'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '<'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '^='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '#'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '*'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '>'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': ')'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '+='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '=='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '('}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '|='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '>='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '{'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '||'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 1, 'origin': 81, 'isTer': False, 'accept': '<='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '*='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '!'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '/'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '!='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '-='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '}'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '/='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': ';'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '%='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '&='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '+'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': ','}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '-'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '<'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '^='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '#'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '*'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '>'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': ')'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '+='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '=='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '('}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '|='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '>='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '{'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '||'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 2, 'origin': 81, 'isTer': False, 'accept': '<='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '*='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '!'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '/'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '!='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '-='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '}'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '/='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': ';'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '%='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '&='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '+'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': ','}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '-'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '<'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '^='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '#'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '*'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '>'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': ')'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '+='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '=='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '('}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '|='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '>='}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '{'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '||'}, {'left': 'assignment_expression', 'right': ['identifier', 'assignment_operator', 'expression'], 'order': 724, 'point': 3, 'origin': 81, 'isTer': True, 'accept': '<='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '*='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '!'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '/'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '!='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '-='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '}'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '/='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': ';'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '%='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '&='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '+'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': ','}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '-'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '<'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '^='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '#'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '*'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '>'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': ')'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '+='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '=='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '('}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '|='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '>='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '{'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '||'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 0, 'origin': 82, 'isTer': False, 'accept': '<='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '*='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '!'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '/'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '!='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '-='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '}'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '/='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': ';'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '%='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '&='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '+'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': ','}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '-'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '<'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '^='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '#'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '*'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '>'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': ')'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '+='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '=='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '('}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '|='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '>='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '{'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '||'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 1, 'origin': 82, 'isTer': False, 'accept': '<='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': 'number'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': 'void'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '*='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '!'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '/'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '!='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '-='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': 'float'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': 'int'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '}'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '/='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': ';'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '%='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '&='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '+'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': ','}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '-'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '<'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '^='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': 'if'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': 'else'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '#'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '*'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '>'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '&&'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': 'identifier'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': 'while'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': ')'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '+='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '=='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': 'return'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '('}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '|='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '>='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '{'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '||'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 2, 'origin': 82, 'isTer': False, 'accept': '<='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '*='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '!'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '/'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '!='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '-='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '}'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '/='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': ';'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '%='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '&='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '+'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': ','}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '-'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '<'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '^='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '#'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '*'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '>'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': ')'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '+='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '=='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '('}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '|='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '>='}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '{'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '||'}, {'left': 'assignment_expression_list_suffix', 'right': [',', 'assignment_expression', 'assignment_expression_list_suffix'], 'order': 725, 'point': 3, 'origin': 82, 'isTer': True, 'accept': '<='}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': 'number'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': 'void'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '*='}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '!'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '/'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '!='}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '-='}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': 'float'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': 'int'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '}'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '/='}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': ';'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '%='}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '&='}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '+'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': ','}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '-'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '<'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '^='}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': 'if'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': 'else'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '#'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '*'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '>'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '&&'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': 'identifier'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': 'while'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': ')'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '+='}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '=='}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': 'return'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '='}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '('}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '|='}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '>='}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '{'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '||'}, {'left': 'assignment_expression_list_suffix', 'right': [], 'order': 726, 'point': 0, 'origin': 83, 'isTer': True, 'accept': '<='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': 'number'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': 'void'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '*='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '!'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '/'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '!='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '-='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': 'float'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': 'int'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '}'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '/='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': ';'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '%='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '&='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '+'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': ','}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '-'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '<'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '^='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': 'if'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': 'else'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '#'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '*'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '>'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '&&'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': 'identifier'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': 'while'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': ')'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '+='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '=='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': 'return'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '('}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '|='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '>='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '{'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '||'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 0, 'origin': 84, 'isTer': False, 'accept': '<='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': 'number'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': 'void'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '*='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '!'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '/'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '!='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '-='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': 'float'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': 'int'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '}'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '/='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': ';'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '%='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '&='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '+'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': ','}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '-'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '<'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '^='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': 'if'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': 'else'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '#'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '*'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '>'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '&&'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': 'identifier'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': 'while'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': ')'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '+='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '=='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': 'return'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '('}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '|='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '>='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '{'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '||'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 1, 'origin': 84, 'isTer': False, 'accept': '<='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': 'number'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': 'void'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '*='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '!'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '/'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '!='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '-='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': 'float'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': 'int'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '}'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '/='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': ';'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '%='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '&='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '+'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': ','}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '-'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '<'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '^='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': 'if'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': 'else'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '#'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '*'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '>'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '&&'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': 'identifier'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': 'while'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': ')'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '+='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '=='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': 'return'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '('}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '|='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '>='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '{'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '||'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 2, 'origin': 84, 'isTer': False, 'accept': '<='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': 'number'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': 'void'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '*='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '!'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '/'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '!='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '-='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': 'float'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': 'int'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '}'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '/='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': ';'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '%='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '&='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '+'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': ','}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '-'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '<'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '^='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': 'if'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': 'else'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '#'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '*'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '>'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '&&'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': 'identifier'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': 'while'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': ')'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '+='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '=='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': 'return'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '('}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '|='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '>='}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '{'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '||'}, {'left': 'jump_statement', 'right': ['return', 'expression', ';'], 'order': 731, 'point': 3, 'origin': 84, 'isTer': True, 'accept': '<='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': 'number'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': 'void'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '*='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '!'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '/'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '!='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '-='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': 'float'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': 'int'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '}'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '/='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': ';'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '%='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '&='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '+'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': ','}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '-'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '<'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '^='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': 'if'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': 'else'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '#'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '*'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '>'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '&&'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': 'identifier'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': 'while'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': ')'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '+='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '=='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': 'return'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '('}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '|='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '>='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '{'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '||'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 0, 'origin': 85, 'isTer': False, 'accept': '<='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': 'number'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': 'void'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '*='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '!'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '/'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '!='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '-='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': 'float'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': 'int'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '}'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '/='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': ';'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '%='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '&='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '+'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': ','}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '-'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '<'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '^='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': 'if'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': 'else'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '#'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '*'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '>'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '&&'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': 'identifier'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': 'while'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': ')'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '+='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '=='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': 'return'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '('}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '|='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '>='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '{'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '||'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 1, 'origin': 85, 'isTer': False, 'accept': '<='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': 'number'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': 'void'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '*='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '!'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '/'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '!='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '-='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': 'float'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': 'int'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '}'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '/='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': ';'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '%='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '&='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '+'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': ','}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '-'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '<'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '^='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': 'if'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': 'else'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '#'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '*'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '>'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '&&'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': 'identifier'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': 'while'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': ')'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '+='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '=='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': 'return'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '('}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '|='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '>='}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '{'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '||'}, {'left': 'jump_statement', 'right': ['return', ';'], 'order': 732, 'point': 2, 'origin': 85, 'isTer': True, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 0, 'origin': 86, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 1, 'origin': 86, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 2, 'origin': 86, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 3, 'origin': 86, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 4, 'origin': 86, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 5, 'origin': 86, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 6, 'origin': 86, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 7, 'origin': 86, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 8, 'origin': 86, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement', 'else', 'N_selection_statement', 'statement'], 'order': 741, 'point': 9, 'origin': 86, 'isTer': True, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 0, 'origin': 87, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 1, 'origin': 87, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 2, 'origin': 87, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 3, 'origin': 87, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 4, 'origin': 87, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 5, 'origin': 87, 'isTer': False, 'accept': '<='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': 'number'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': 'void'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '*='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '!'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '/'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '!='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '-='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': 'float'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': 'int'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '}'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '/='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': ';'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '%='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '&='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '+'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': ','}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '-'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '<'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '^='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': 'if'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': 'else'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '#'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '*'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '>'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '&&'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': 'identifier'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': 'while'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': ')'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '+='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '=='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': 'return'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '('}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '|='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '>='}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '{'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '||'}, {'left': 'selection_statement', 'right': ['if', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 742, 'point': 6, 'origin': 87, 'isTer': True, 'accept': '<='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': 'number'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': 'void'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '*='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '!'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '/'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '!='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '-='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': 'float'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': 'int'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '}'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '/='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': ';'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '%='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '&='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '+'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': ','}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '-'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '<'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '^='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': 'if'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': 'else'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '#'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '*'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '>'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '&&'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': 'identifier'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': 'while'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': ')'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '+='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '=='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': 'return'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '('}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '|='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '>='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '{'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '||'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 0, 'origin': 88, 'isTer': False, 'accept': '<='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': 'number'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': 'void'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '*='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '!'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '/'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '!='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '-='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': 'float'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': 'int'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '}'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '/='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': ';'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '%='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '&='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '+'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': ','}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '-'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '<'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '^='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': 'if'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': 'else'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '#'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '*'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '>'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '&&'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': 'identifier'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': 'while'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': ')'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '+='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '=='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': 'return'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '('}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '|='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '>='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '{'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '||'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 1, 'origin': 88, 'isTer': False, 'accept': '<='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': 'number'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': 'void'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '*='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '!'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '/'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '!='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '-='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': 'float'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': 'int'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '}'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '/='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': ';'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '%='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '&='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '+'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': ','}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '-'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '<'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '^='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': 'if'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': 'else'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '#'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '*'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '>'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '&&'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': 'identifier'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': 'while'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': ')'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '+='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '=='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': 'return'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '('}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '|='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '>='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '{'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '||'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 2, 'origin': 88, 'isTer': False, 'accept': '<='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': 'number'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': 'void'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '*='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '!'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '/'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '!='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '-='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': 'float'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': 'int'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '}'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '/='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': ';'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '%='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '&='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '+'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': ','}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '-'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '<'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '^='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': 'if'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': 'else'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '#'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '*'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '>'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '&&'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': 'identifier'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': 'while'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': ')'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '+='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '=='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': 'return'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '('}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '|='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '>='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '{'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '||'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 3, 'origin': 88, 'isTer': False, 'accept': '<='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': 'number'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': 'void'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '*='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '!'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '/'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '!='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '-='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': 'float'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': 'int'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '}'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '/='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': ';'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '%='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '&='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '+'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': ','}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '-'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '<'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '^='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': 'if'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': 'else'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '#'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '*'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '>'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '&&'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': 'identifier'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': 'while'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': ')'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '+='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '=='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': 'return'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '('}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '|='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '>='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '{'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '||'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 4, 'origin': 88, 'isTer': False, 'accept': '<='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': 'number'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': 'void'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '*='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '!'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '/'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '!='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '-='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': 'float'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': 'int'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '}'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '/='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': ';'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '%='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '&='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '+'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': ','}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '-'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '<'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '^='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': 'if'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': 'else'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '#'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '*'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '>'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '&&'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': 'identifier'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': 'while'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': ')'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '+='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '=='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': 'return'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '('}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '|='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '>='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '{'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '||'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 5, 'origin': 88, 'isTer': False, 'accept': '<='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': 'number'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': 'void'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '*='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '!'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '/'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '!='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '-='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': 'float'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': 'int'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '}'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '/='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': ';'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '%='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '&='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '+'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': ','}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '-'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '<'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '^='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': 'if'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': 'else'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '#'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '*'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '>'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '&&'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': 'identifier'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': 'while'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': ')'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '+='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '=='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': 'return'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '('}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '|='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '>='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '{'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '||'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 6, 'origin': 88, 'isTer': False, 'accept': '<='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': 'number'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': 'void'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '*='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '!'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '/'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '!='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '-='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': 'float'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': 'int'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '}'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '/='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': ';'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '%='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '&='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '+'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': ','}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '-'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '<'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '^='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': 'if'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': 'else'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '#'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '*'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '>'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '&&'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': 'identifier'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': 'while'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': ')'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '+='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '=='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': 'return'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '('}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '|='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '>='}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '{'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '||'}, {'left': 'iteration_statement', 'right': ['while', 'N_iteration_statement', '(', 'constant_expression', ')', 'M_selection_statement', 'statement'], 'order': 743, 'point': 7, 'origin': 88, 'isTer': True, 'accept': '<='}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': 'number'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': 'void'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '*='}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '!'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '/'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '!='}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '-='}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': 'float'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': 'int'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '}'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '/='}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': ';'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '%='}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '&='}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '+'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': ','}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '-'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '<'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '^='}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': 'if'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': 'else'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '#'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '*'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '>'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '&&'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': 'identifier'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': 'while'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': ')'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '+='}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '=='}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': 'return'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '='}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '('}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '|='}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '>='}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '{'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '||'}, {'left': 'M_selection_statement', 'right': [], 'order': 751, 'point': 0, 'origin': 89, 'isTer': True, 'accept': '<='}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': 'number'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': 'void'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '*='}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '!'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '/'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '!='}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '-='}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': 'float'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': 'int'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '}'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '/='}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': ';'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '%='}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '&='}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '+'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': ','}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '-'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '<'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '^='}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': 'if'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': 'else'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '#'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '*'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '>'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '&&'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': 'identifier'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': 'while'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': ')'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '+='}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '=='}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': 'return'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '='}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '('}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '|='}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '>='}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '{'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '||'}, {'left': 'N_selection_statement', 'right': [], 'order': 752, 'point': 0, 'origin': 90, 'isTer': True, 'accept': '<='}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': 'number'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': 'void'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '*='}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '!'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '/'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '!='}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '-='}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': 'float'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': 'int'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '}'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '/='}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': ';'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '%='}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '&='}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '+'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': ','}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '-'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '<'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '^='}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': 'if'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': 'else'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '#'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '*'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '>'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '&&'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': 'identifier'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': 'while'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': ')'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '+='}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '=='}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': 'return'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '='}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '('}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '|='}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '>='}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '{'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '||'}, {'left': 'N_iteration_statement', 'right': [], 'order': 753, 'point': 0, 'origin': 91, 'isTer': True, 'accept': '<='}] 

原点在开头的产生式编号：
 {'sstart': {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37}, 'start': {204, 219, 205, 224, 206, 207, 208, 222, 209, 220, 210, 211, 217, 212, 213, 214, 221, 215, 216, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 218, 223, 225, 226, 227}, 'external_declaration': {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255}, 'declaration': {384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 380, 381, 382, 383}, 'declaration_parameter': {570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607}, 'declaration_parameter_assign': {865, 860, 866, 855, 867, 868, 869, 859, 870, 858, 861, 871, 856, 872, 854, 873, 853, 850, 857, 851, 852, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 862, 863, 864}, 'declaration_parameter_suffix': {896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895}, 'M_declaration_parameter': {1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139}, 'M_declaration_parameter_suffix': {1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151}, 'primary_expression': {1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367}, 'expression': {1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519}, 'function_expression': {1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663}, 'expression_list': {1959, 1969, 1970, 1964, 1960, 1961, 1966, 1962, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1971, 1972, 1973, 1974, 1967, 1975, 1965, 1952, 1953, 1954, 1968, 1963, 1955, 1956, 1957, 1958}, 'expression_list_suffix': {2137, 2142, 2128, 2147, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2129, 2130, 2135, 2136, 2131, 2138, 2139, 2140, 2141, 2132, 2143, 2144, 2145, 2146, 2133, 2148, 2149, 2150, 2151, 2134, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2152}, 'assignment_operator': {2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811}, 'type_specifier': {2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039}, 'constant_expression': {3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115}, 'or_bool_expression': {3328, 3329, 3330, 3331, 3308, 3332, 3333, 3334, 3335, 3309, 3336, 3337, 3338, 3339, 3310, 3340, 3341, 3342, 3343, 3313, 3324, 3318, 3319, 3320, 3325, 3327, 3326, 3321, 3322, 3323, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3311, 3312, 3306, 3314, 3315, 3316, 3317, 3307}, 'and_bool_expression': {3537, 3538, 3564, 3569, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3398, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415, 3416, 3417, 3418, 3419, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3554, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 3534, 3565, 3566, 3567, 3568, 3535, 3570, 3571, 3536}, 'single_bool_expression': {3766, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 3647, 3767, 3768, 3769, 3770, 3771, 3772, 3773, 3774, 3775, 3776, 3777, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796, 3797, 3798, 3799, 3762, 3763, 3764, 3765}, 'first_expression': {3840, 3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870, 3871, 3872, 3873, 3874, 3875, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 3990, 3991, 3992, 3993, 3994, 3838, 3839}, 'second_expression': {4096, 4097, 4098, 4099, 4100, 4101, 4102, 4103, 4218, 4222, 4223, 4224, 4225, 4228, 4229, 4226, 4231, 4232, 4233, 4234, 4227, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4219, 4244, 4245, 4246, 4247, 4248, 4249, 4230, 4251, 4252, 4253, 4254, 4250, 4255, 4220, 4235, 4221, 4243, 4066, 4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4076, 4077, 4078, 4079, 4080, 4081, 4082, 4083, 4084, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4092, 4093, 4094, 4095}, 'third_expression': {4427, 4442, 4428, 4429, 4430, 4431, 4445, 4444, 4432, 4443, 4433, 4438, 4434, 4440, 4439, 4435, 4436, 4437, 4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4421, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4422, 4441, 4423, 4424, 4425, 4426}, 'or_operator': {4484, 4485, 4486, 4487, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521}, 'and_operator': {4560, 4561, 4562, 4563, 4564, 4565, 4566, 4567, 4568, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593, 4594, 4595, 4596, 4597}, 'bool_operator': {4636, 4637, 4638, 4639, 4640, 4641, 4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4667, 4668, 4669, 4670, 4671, 4672, 4673, 4712, 4713, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 4744, 4745, 4746, 4747, 4748, 4749, 4788, 4789, 4790, 4791, 4792, 4793, 4794, 4795, 4796, 4797, 4798, 4799, 4800, 4801, 4802, 4803, 4804, 4805, 4806, 4807, 4808, 4809, 4810, 4811, 4812, 4813, 4814, 4815, 4816, 4817, 4818, 4819, 4820, 4821, 4822, 4823, 4824, 4825, 4864, 4865, 4866, 4867, 4868, 4869, 4870, 4871, 4872, 4873, 4874, 4875, 4876, 4877, 4878, 4879, 4880, 4881, 4882, 4883, 4884, 4885, 4886, 4887, 4888, 4889, 4890, 4891, 4892, 4893, 4894, 4895, 4896, 4897, 4898, 4899, 4900, 4901, 4940, 4941, 4942, 4943, 4944, 4945, 4946, 4947, 4948, 4949, 4950, 4951, 4952, 4953, 4954, 4955, 4956, 4957, 4958, 4959, 4960, 4961, 4962, 4963, 4964, 4965, 4966, 4967, 4968, 4969, 4970, 4971, 4972, 4973, 4974, 4975, 4976, 4977, 5016, 5017, 5018, 5019, 5020, 5021, 5022, 5023, 5024, 5025, 5026, 5027, 5028, 5029, 5030, 5031, 5032, 5033, 5034, 5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5052, 5053}, 'first_operator': {5120, 5121, 5122, 5123, 5124, 5125, 5126, 5127, 5128, 5129, 5168, 5169, 5170, 5171, 5172, 5173, 5174, 5175, 5176, 5177, 5178, 5179, 5180, 5181, 5182, 5183, 5184, 5185, 5186, 5187, 5188, 5189, 5190, 5191, 5192, 5193, 5194, 5195, 5196, 5197, 5198, 5199, 5200, 5201, 5202, 5203, 5204, 5205, 5092, 5093, 5094, 5095, 5096, 5097, 5098, 5099, 5100, 5101, 5102, 5103, 5104, 5105, 5106, 5107, 5108, 5109, 5110, 5111, 5112, 5113, 5114, 5115, 5116, 5117, 5118, 5119}, 'second_operator': {5248, 5249, 5250, 5251, 5252, 5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5268, 5269, 5270, 5271, 5272, 5273, 5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330, 5331, 5332, 5333, 5334, 5335, 5336, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5346, 5347, 5348, 5349, 5350, 5351, 5352, 5353, 5354, 5355, 5356, 5357, 5244, 5245, 5246, 5247}, 'function_definition': {5396, 5397, 5398, 5399, 5400, 5401, 5402, 5403, 5404, 5405, 5406, 5407, 5408, 5409, 5410, 5411, 5412, 5413, 5414, 5415, 5416, 5417, 5418, 5419, 5420, 5421, 5422, 5423, 5424, 5425, 5426, 5427, 5428, 5429, 5430, 5431, 5432, 5433}, 'M_function_definition': {5700, 5701, 5702, 5703, 5704, 5705, 5706, 5707, 5708, 5709, 5710, 5711, 5712, 5713, 5714, 5715, 5716, 5717, 5718, 5719, 5720, 5721, 5722, 5723, 5724, 5725, 5726, 5727, 5728, 5729, 5730, 5731, 5732, 5733, 5734, 5735, 5736, 5737}, 'function_parameter_list': {5738, 5739, 5740, 5741, 5742, 5743, 5744, 5745, 5746, 5747, 5748, 5749, 5750, 5751, 5752, 5753, 5754, 5755, 5756, 5757, 5758, 5759, 5760, 5761, 5762, 5763, 5764, 5765, 5766, 5767, 5768, 5769, 5770, 5771, 5772, 5773, 5774, 5775, 5852, 5853, 5854, 5855, 5856, 5857, 5858, 5859, 5860, 5861, 5862, 5863, 5864, 5865, 5866, 5867, 5868, 5869, 5870, 5871, 5872, 5873, 5874, 5875, 5876, 5877, 5878, 5879, 5880, 5881, 5882, 5883, 5884, 5885, 5886, 5887, 5888, 5889, 5890, 5891, 5892, 5893, 5894, 5895, 5896, 5897, 5898, 5899, 5900, 5901, 5902, 5903, 5904, 5905, 5906, 5907, 5908, 5909, 5910, 5911, 5912, 5913, 5914, 5915, 5916, 5917, 5918, 5919, 5920, 5921, 5922, 5923, 5924, 5925, 5926, 5927}, 'function_parameter_list_suffix': {6144, 6145, 6146, 6147, 6148, 6149, 6150, 6151, 6152, 6153, 6154, 6155, 6156, 6157, 6158, 6159, 6160, 6161, 6162, 6163, 6164, 6165, 6166, 6167, 6168, 6169, 6170, 6171, 6172, 6173, 6174, 6175, 6176, 6177, 6178, 6179, 6180, 6181, 6182, 6183, 6184, 6185, 6186, 6187, 6188, 6189, 6190, 6191, 6192, 6193, 5966, 5967, 5968, 5969, 5970, 5971, 5972, 5973, 5974, 5975, 5976, 5977, 5978, 5979, 5980, 5981, 5982, 5983, 5984, 5985, 5986, 5987, 5988, 5989, 5990, 5991, 5992, 5993, 5994, 5995, 5996, 5997, 5998, 5999, 6000, 6001, 6002, 6003, 6118, 6119, 6120, 6121, 6122, 6123, 6124, 6125, 6126, 6127, 6128, 6129, 6130, 6131, 6132, 6133, 6134, 6135, 6136, 6137, 6138, 6139, 6140, 6141, 6142, 6143}, 'function_parameter': {6232, 6233, 6234, 6235, 6236, 6237, 6238, 6239, 6240, 6241, 6242, 6243, 6244, 6245, 6246, 6247, 6248, 6249, 6250, 6251, 6252, 6253, 6254, 6255, 6256, 6257, 6258, 6259, 6260, 6261, 6262, 6263, 6264, 6265, 6266, 6267, 6268, 6269}, 'compound_statement': {6346, 6347, 6348, 6349, 6350, 6351, 6352, 6353, 6354, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6363, 6364, 6365, 6366, 6367, 6368, 6369, 6370, 6371, 6372, 6373, 6374, 6375, 6376, 6377, 6378, 6379, 6380, 6381, 6382, 6383}, 'statement_list': {6528, 6529, 6530, 6531, 6532, 6533, 6534, 6535, 6640, 6641, 6635, 6642, 6643, 6644, 6645, 6646, 6636, 6647, 6639, 6648, 6638, 6649, 6634, 6633, 6626, 6637, 6627, 6632, 6628, 6629, 6630, 6631, 6612, 6613, 6614, 6615, 6616, 6617, 6618, 6619, 6620, 6621, 6622, 6623, 6624, 6625, 6498, 6499, 6500, 6501, 6502, 6503, 6504, 6505, 6506, 6507, 6508, 6509, 6510, 6511, 6512, 6513, 6514, 6515, 6516, 6517, 6518, 6519, 6520, 6521, 6522, 6523, 6524, 6525, 6526, 6527}, 'statement': {6656, 6657, 6658, 6659, 6660, 6661, 6662, 6663, 6664, 6665, 6666, 6667, 6668, 6669, 6670, 6671, 6672, 6673, 6674, 6675, 6676, 6677, 6678, 6679, 6680, 6681, 6682, 6683, 6684, 6685, 6686, 6687, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6878, 6879, 6880, 6881, 6882, 6883, 6884, 6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, 6895, 6896, 6897, 6898, 6899, 6900, 6901, 6902, 6903, 6904, 6905, 6906, 6907, 6908, 6909, 6910, 6911, 6912, 6913, 6914, 6915, 6954, 6955, 6956, 6957, 6958, 6959, 6960, 6961, 6962, 6963, 6964, 6965, 6966, 6967, 6968, 6969, 6970, 6971, 6972, 6973, 6974, 6975, 6976, 6977, 6978, 6979, 6980, 6981, 6982, 6983, 6984, 6985, 6986, 6987, 6988, 6989, 6990, 6991, 7030, 7031, 7032, 7033, 7034, 7035, 7036, 7037, 7038, 7039, 7040, 7041, 7042, 7043, 7044, 7045, 7046, 7047, 7048, 7049, 7050, 7051, 7052, 7053, 7054, 7055, 7056, 7057, 7058, 7059, 7060, 7061, 7062, 7063, 7064, 7065, 7066, 7067, 6650, 6651, 6652, 6653, 6654, 6655}, 'expression_statement': {7106, 7107, 7108, 7109, 7110, 7111, 7112, 7113, 7114, 7115, 7116, 7117, 7118, 7119, 7120, 7121, 7122, 7123, 7124, 7125, 7126, 7127, 7128, 7129, 7130, 7131, 7132, 7133, 7134, 7135, 7136, 7137, 7138, 7139, 7140, 7141, 7142, 7143}, 'assignment_expression_list': {7353, 7354, 7355, 7356, 7368, 7363, 7357, 7358, 7359, 7334, 7335, 7336, 7337, 7338, 7339, 7340, 7341, 7342, 7343, 7344, 7345, 7346, 7347, 7220, 7221, 7222, 7223, 7224, 7225, 7226, 7227, 7228, 7229, 7230, 7231, 7232, 7233, 7234, 7235, 7236, 7237, 7238, 7239, 7240, 7241, 7242, 7243, 7244, 7245, 7246, 7247, 7248, 7249, 7250, 7251, 7252, 7253, 7254, 7255, 7256, 7257, 7369, 7370, 7371, 7366, 7361, 7365, 7348, 7364, 7349, 7350, 7360, 7351, 7367, 7362, 7352}, 'assignment_expression': {7372, 7373, 7374, 7375, 7376, 7377, 7378, 7379, 7380, 7381, 7382, 7383, 7384, 7385, 7386, 7387, 7388, 7389, 7390, 7391, 7392, 7393, 7394, 7395, 7396, 7397, 7398, 7399, 7400, 7401, 7402, 7403, 7404, 7405, 7406, 7407, 7408, 7409}, 'assignment_expression_list_suffix': {7552, 7553, 7554, 7555, 7556, 7557, 7558, 7559, 7560, 7561, 7678, 7682, 7683, 7684, 7685, 7686, 7687, 7688, 7689, 7690, 7691, 7692, 7693, 7694, 7695, 7696, 7697, 7698, 7699, 7700, 7701, 7679, 7703, 7704, 7705, 7706, 7707, 7708, 7709, 7710, 7711, 7712, 7713, 7680, 7681, 7676, 7702, 7677, 7524, 7525, 7526, 7527, 7528, 7529, 7530, 7531, 7532, 7533, 7534, 7535, 7536, 7537, 7538, 7539, 7540, 7541, 7542, 7543, 7544, 7545, 7546, 7547, 7548, 7549, 7550, 7551}, 'jump_statement': {7889, 7899, 7866, 7867, 7714, 7715, 7716, 7717, 7718, 7719, 7720, 7721, 7722, 7723, 7724, 7725, 7726, 7727, 7728, 7729, 7730, 7731, 7732, 7733, 7734, 7735, 7736, 7737, 7738, 7739, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 7747, 7748, 7749, 7750, 7751, 7871, 7872, 7873, 7869, 7875, 7874, 7876, 7878, 7877, 7880, 7881, 7882, 7883, 7884, 7885, 7886, 7887, 7888, 7879, 7890, 7891, 7892, 7893, 7894, 7895, 7896, 7897, 7898, 7870, 7900, 7901, 7902, 7903, 7868}, 'selection_statement': {8370, 8380, 8396, 8371, 8397, 8372, 8382, 8373, 8374, 8375, 8381, 8376, 8377, 8360, 8361, 8362, 8363, 7980, 7981, 7982, 7983, 7984, 7985, 7986, 7987, 7988, 7989, 7990, 7991, 7992, 7993, 7994, 7995, 7996, 7997, 7998, 7999, 8000, 8001, 8002, 8003, 8004, 8005, 8006, 8007, 8008, 8009, 8010, 8011, 8012, 8013, 8014, 8015, 8016, 8017, 8378, 8383, 8385, 8386, 8387, 8388, 8389, 8364, 8390, 8365, 8379, 8391, 8366, 8384, 8392, 8367, 8393, 8368, 8394, 8369, 8395}, 'iteration_statement': {8626, 8627, 8628, 8629, 8630, 8631, 8632, 8633, 8634, 8635, 8636, 8637, 8638, 8639, 8640, 8641, 8642, 8643, 8644, 8645, 8646, 8647, 8648, 8649, 8650, 8651, 8652, 8653, 8654, 8655, 8656, 8657, 8658, 8659, 8660, 8661, 8662, 8663}, 'M_selection_statement': {8960, 8961, 8962, 8963, 8964, 8965, 8966, 8967, 8930, 8931, 8932, 8933, 8934, 8935, 8936, 8937, 8938, 8939, 8940, 8941, 8942, 8943, 8944, 8945, 8946, 8947, 8948, 8949, 8950, 8951, 8952, 8953, 8954, 8955, 8956, 8957, 8958, 8959}, 'N_selection_statement': {8968, 8969, 8970, 8971, 8972, 8973, 8974, 8975, 8976, 8977, 8978, 8979, 8980, 8981, 8982, 8983, 8984, 8985, 8986, 8987, 8988, 8989, 8990, 8991, 8992, 8993, 8994, 8995, 8996, 8997, 8998, 8999, 9000, 9001, 9002, 9003, 9004, 9005}, 'N_iteration_statement': {9006, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9014, 9015, 9016, 9017, 9018, 9019, 9020, 9021, 9022, 9023, 9024, 9025, 9026, 9027, 9028, 9029, 9030, 9031, 9032, 9033, 9034, 9035, 9036, 9037, 9038, 9039, 9040, 9041, 9042, 9043}} 

